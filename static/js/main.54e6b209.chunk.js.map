{"version":3,"sources":["App.js","config.js","ExecuteRollover.js","mm_logo.svg","use-pawn-lender.js","usePawnBorrower.js","usePayLoan.js","useApproveERC20.js","BorrowerLoanCard.js","reportWebVitals.js","index.js"],"names":["ALCHEMY","App","useConnect","data","useAccount","disconnect","console","log","connected","className","style","border","color","onClick","path","element","Landing","SignerContainer","SubmitContainer","to","replace","ConnectPrompt","chainInfo","usePawnLender","useSigner","signer","wethContract","useContract","addressOrName","addresses","tokens","weth","contractInterface","erc20ABI","signerOrProvider","usdcContract","usdc","useWaitForTransaction","skip","wait","window","approveWETH","a","target","originationController","approve","ethers","constants","MaxInt256","hash","waitForApproval","confirmations","toast","promise","pending","success","error","response","approveUSDC","backgroundColor","loans","map","loan","i","LoanCard","index","borrowerChainInfo","usePawnBorrower","background","padding","key","loanId","terms","useState","showRollover","setShowRollover","toString","legacy","borrower","utils","formatUnits","principal","payableTokenDecimals","payableTokenSymbol","CollateralList","collateral","RolloverSigningForm","oldTerms","erc20","c","amount","decimals","symbol","tokenAddress","erc721","tokenName","tokenId","toNumber","erc1155","prorated","durationSecs","principalBase","Number","interestBase","interest","apr","initialState","duration","setTerms","updateForm","e","value","totalInterest","parseInt","doSigning","typedLoanTermsData","LoanTerms","name","type","domainData","verifyingContract","version","chainId","newLoanTerms","parseUnits","toFixed","collateralTokenId","payableCurrency","fromRpcSig","_signTypedData","sig","payload","lender","contracts","sourceLoanCore","contractAddresses","loanCore","current","targetLoanCore","sourceRepaymentController","repaymentController","targetOriginationController","signature","v","r","Buffer","from","s","metadata","dueDate","moment","add","toISOString","blob","Blob","JSON","stringify","saveAs","Date","now","onChange","format","connect","connectors","wc","cursor","src","MMLogo","alt","instructions","Main","InjectedConnector","defaultChains","options","shimDisconnect","WalletConnectConnector","rpc","1","qrcode","provider","providers","AlchemyProvider","position","lenderNote","borrowerNote","common","assetWrapper","flashRollover","ExecuteRollover","setPayload","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","RepaymentControllerAbi","flashRolloverContract","promissoryNoteAbi","FlashRolloverAbi","assetWrapperContract","AssetWrapperAbi","loanCoreContract","loanCoreAbi","doRollover","Uint8Array","atob","charCodeAt","rolloverLoan","gasLimit","rolloverHash","waitdoRollover","d","parse","fromNow","event","files","reader","FileReader","addEventListener","result","readAsText","disabled","useProvider","account","setChainInfo","useEffect","legacyLenderNote","Contract","LegacyPromissoryNoteAbi","PromissoryNoteAbi","legacyLoanCore","LegacyLoanCoreAbi","LoanCoreAbi","ERC20Abi","getBalance","ethBalance","balanceOf","usdcBalance","wethBalance","numLenderNotes","numLegacyLenderNotes","tokenOfOwnerByIndex","lenderNoteId","loanIdByNoteId","getLoan","loanData","borrowerNoteId","state","erc20Holdings","erc721Holdings","erc1155Holdings","failed","bundleERC20Holdings","holding","token","push","bundleERC721Holdings","ERC721Abi","bundleERC1155Holdings","ERC1155Abi","payableToken","payableTokenName","info","balances","eth","Object","assign","getInfo","legacyBorrowerNote","numBorrowerNote","numLegacyBorrowerNote","usePayLoan","doApprove","spender","erc20Contract","useApproveERC20","repaymentContract","doRepay","repay","BorrowerLoanCard","borrowerNoteLookupKey","borrowerNoteContract","approveNote","noteId","display","justifyContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54e6b209.chunk.js","sourcesContent":["import { useState } from \"react\";\n// import { useWallet, UseWalletProvider } from \"use-wallet\";\nimport { ethers, providers } from \"ethers\";\nimport { saveAs } from \"file-saver\";\nimport { fromRpcSig } from \"ethereumjs-util\";\nimport moment from \"moment\";\nimport FlashRolloverAbi from \"./abis/flash-rollover.json\";\nimport RepaymentControllerAbi from \"./abis/repayment-controller.json\";\nimport AssetWrapperAbi from \"./abis/asset-wrapper.json\";\nimport loanCoreAbi from \"./abis/loan-core.json\";\nimport { addresses } from \"./config\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  Provider,\n  chain,\n  defaultChains,\n  useAccount,\n  useSigner,\n  useConnect,\n  useNetwork,\n  useContract,\n  erc20ABI,\n  useWaitForTransaction,\n} from \"wagmi\";\nimport { BorrowerLoanCard } from \"./BorrowerLoanCard\";\nimport { InjectedConnector } from \"wagmi/connectors/injected\";\nimport { BrowserRouter, Navigate, Routes, Route, Link } from \"react-router-dom\";\nimport promissoryNoteAbi from \"./abis/promissory-note.json\";\nimport MMLogo from \"./mm_logo.svg\";\nimport \"./App.css\";\nimport { usePawnLender } from \"./use-pawn-lender\";\nimport { usePawnBorrower } from \"./usePawnBorrower\";\nimport { WalletConnectConnector } from \"wagmi/connectors/walletConnect\";\nimport { ExecuteRollover } from \"./ExecuteRollover\";\n\nconst ALCHEMY = \"nFgwePbNgrn6330Zsxu7l5oKP_IW5xBg\";\n\nfunction Main() {\n  const provider = ({ chainId }) => {\n    return new providers.AlchemyProvider(chainId, ALCHEMY);\n  };\n  const connectors = ({ chainId }) => {\n    return [\n      new InjectedConnector({\n        defaultChains,\n        options: { shimDisconnect: true },\n      }),\n      new WalletConnectConnector({\n        options: {\n          rpc: {\n            1: `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY}`,\n          },\n          chainId: 1,\n          qrcode: true,\n        },\n      }),\n    ];\n  };\n  return (\n    <Provider connectors={connectors} provider={provider}>\n      <ToastContainer position=\"top-center\" />\n      <App />\n    </Provider>\n  );\n}\n\nfunction App() {\n  // const account = useAccount();\n  const [{ data }, connect] = useConnect();\n  const [{ data: account }, disconnect] = useAccount();\n\n  console.log(\"rendering\", data?.connected);\n\n  // if (\n  //   data &&\n  //   data?.connectors[0].chainId !== 1 &&\n  //   data?.connectors[0].chainId !== 1337\n  // ) {\n  //   return (\n  //     <div className=\"App\">\n  //       <div className=\"container main\">\n  //         <h1 className=\"bold\">Pawn.fi Rollover Signer</h1>\n  //         <hr />\n  //         <h4 className=\"bold header\">\n  //           Please switch your wallet network to Ethereum mainnet.\n  //         </h4>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container main\">\n        <h1 className=\"header bold\">Arcade Rollover Signer</h1>\n        <hr />\n        {data?.connected ? (\n          <>\n            <button\n              style={{ border: \"1px solid red\", color: \"white\" }}\n              onClick={() => disconnect()}\n            >\n              Disconnect\n            </button>\n            <BrowserRouter>\n              <Routes>\n                <Route path=\"/sample-rollover-signer\" element={<Landing />} />\n                <Route\n                  path=\"/sample-rollover-signer/lender\"\n                  element={<SignerContainer />}\n                />\n                <Route\n                  path=\"/sample-rollover-signer/borrower\"\n                  element={<SubmitContainer />}\n                />\n                <Route\n                  path=\"*\"\n                  element={<Navigate to=\"/sample-rollover-signer\" replace />}\n                />\n              </Routes>\n            </BrowserRouter>\n          </>\n        ) : (\n          <ConnectPrompt />\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Landing() {\n  return (\n    <div className=\"container\">\n      <div className=\"row centered\">\n        <Link to=\"/sample-rollover-signer/lender\">\n          <button className=\"button-primary\">Lender</button>\n        </Link>\n      </div>\n      <div className=\"row centered\">\n        <Link to=\"/sample-rollover-signer/borrower\">\n          <button className=\"button-primary\">Borrower</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nfunction SignerContainer() {\n  // const wallet = useWallet();\n  const chainInfo = usePawnLender();\n  const [{ data: signer }] = useSigner();\n\n  const wethContract = useContract({\n    addressOrName: addresses.tokens.weth,\n    contractInterface: erc20ABI,\n    signerOrProvider: signer,\n  });\n\n  const usdcContract = useContract({\n    addressOrName: addresses.tokens.usdc,\n    contractInterface: erc20ABI,\n    signerOrProvider: signer,\n  });\n\n  // eslint-disable-next-line no-unused-vars\n  const [_, wait] = useWaitForTransaction({\n    skip: true,\n  });\n\n  window.chainInfo = chainInfo;\n\n  if (!chainInfo) return <h4>Loading...</h4>;\n  console.log({ chainInfo });\n  const approveWETH = async () => {\n    console.log(\n      `approving WETH for ... ${addresses.target.originationController}`\n    );\n    try {\n      const { hash } = await wethContract.approve(\n        addresses.target.originationController,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving WETH...\",\n        success: \"WETH Approved\",\n        error: \"Failed to Approve WETH\",\n      });\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const approveUSDC = async () => {\n    console.log(\n      `approving USDC for...${addresses.target.originationController}`\n    );\n    try {\n      const { hash } = await usdcContract.approve(\n        addresses.target.originationController,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving USDC...\",\n        success: \"USDC Approved\",\n        error: \"Failed to Approve USDC\",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <h4>Active Loans</h4>\n      <div>\n        <button\n          onClick={() => approveWETH()}\n          style={{ backgroundColor: \"white\" }}\n        >\n          Approve WETH (OrCtrl)\n        </button>\n        &nbsp; &nbsp;\n        <button\n          onClick={() => approveUSDC()}\n          style={{ backgroundColor: \"white\" }}\n        >\n          Approve USDC (OrCtrl)\n        </button>\n      </div>\n      <ExecuteRollover />\n      {chainInfo.loans.map((loan, i) => (\n        <LoanCard loan={loan} key={i} index={i} chainInfo={chainInfo} />\n      ))}\n    </div>\n  );\n}\n\nfunction SubmitContainer() {\n  // const wallet = useWallet();\n  const borrowerChainInfo = usePawnBorrower();\n  if (!borrowerChainInfo) return <h4>Loading Borrower Loans...</h4>;\n\n  return (\n    <div>\n      <ExecuteRollover />\n      {borrowerChainInfo &&\n        borrowerChainInfo.loans.map((loan, i) => (\n          <div style={{ background: \"gray\", padding: \"10px\" }}>\n            <BorrowerLoanCard\n              loan={loan}\n              key={i}\n              chainInfo={borrowerChainInfo}\n            />\n          </div>\n        ))}\n    </div>\n  );\n}\n\nfunction LoanCard({ loan, index: key, chainInfo }) {\n  const { loanId, terms, data } = loan;\n  const [showRollover, setShowRollover] = useState(false);\n\n  return (\n    <div className=\"loan card\" key={key}>\n      <h5 className=\"bold\">\n        Loan ID {loanId.toString()}\n        {loan.legacy && ` (Legacy)`}\n      </h5>\n      <p>\n        <strong>Borrower:</strong> {loan.borrower}\n      </p>\n      <p>\n        <strong>Principal:</strong>{\" \"}\n        {ethers.utils.formatUnits(terms.principal, terms.payableTokenDecimals)}{\" \"}\n        {terms.payableTokenSymbol}\n      </p>\n      {/* <p>\n        <strong>Interest:</strong>{\" \"}\n        {ethers.utils.formatUnits(terms.interest, terms.payableTokenDecimals)}{\" \"}\n        {terms.payableTokenSymbol}\n      </p> */}\n      <CollateralList loanId={loanId} collateral={loan.collateral} />\n      {/* <p>\n        <strong>\n          <DueDate ts={data.dueDate} />\n        </strong>\n      </p> */}\n      <p>\n        <strong>\n          <a\n            className=\"rollover toggle\"\n            onClick={() => setShowRollover(!showRollover)}\n          >\n            {showRollover ? \"Hide\" : \"Rollover Loan\"}\n          </a>\n        </strong>\n      </p>\n      {showRollover && (\n        <RolloverSigningForm\n          loan={loan}\n          oldTerms={terms}\n          chainInfo={chainInfo}\n        />\n      )}\n    </div>\n  );\n}\n\nexport const CollateralList = ({ loanId, collateral }) => {\n  return (\n    <div>\n      <strong>Collateral:</strong>\n      <ul className=\"collateral list\">\n        {collateral.erc20.map((c) => (\n          <li key={loanId + c.tokenAddress + c.amount.toString()}>\n            {ethers.utils.formatUnits(c.amount, c.decimals)} {c.symbol}\n          </li>\n        ))}\n        {collateral.erc721.map((c) => (\n          <li key={loanId + c.tokenAddress + c.tokenId}>\n            {c.tokenName} #{c.tokenId.toNumber()}\n          </li>\n        ))}\n        {collateral.erc1155.map((c) => (\n          <li key={(loanId = c.tokenAddress)}>\n            {c.amount} of {c.tokenName} #{c.tokenId}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nfunction DueDate({ ts }) {\n  const d = moment.unix(ts);\n\n  if (d > Date.now()) {\n    return `Due ${d.fromNow()} (${d.format(\"LLL\")})`;\n  } else {\n    return `Overdue: due ${d.toNow()} (${d.format(\"LLL\")})`;\n  }\n}\n\nexport const RolloverSigningForm = ({ loan, oldTerms, chainInfo }) => {\n  // const wallet = useWallet();\n  const [{ data: signer }] = useSigner();\n\n  window.oldTerms = oldTerms;\n  const SECONDS_IN_YEAR = 31536000;\n  const SECONDS_IN_DAY = 86400;\n  const prorated = oldTerms.durationSecs.toNumber() / SECONDS_IN_YEAR;\n  const principalBase = Number(\n    ethers.utils.formatUnits(oldTerms.principal, oldTerms.payableTokenDecimals)\n  );\n  const interestBase = Number(\n    ethers.utils.formatUnits(oldTerms.interest, oldTerms.payableTokenDecimals)\n  );\n  const apr = (interestBase / principalBase / prorated) * 100;\n  const durationDays = oldTerms.durationSecs.toNumber() / SECONDS_IN_DAY;\n\n  const initialState = {\n    principal: principalBase,\n    interest: interestBase,\n    duration: durationDays,\n    apr,\n  };\n\n  const [terms, setTerms] = useState(initialState);\n\n  const updateForm = (key) => (e) => {\n    setTerms({ ...terms, [key]: e.target.value });\n  };\n\n  window.terms = terms;\n  // window.wallet = wallet;\n\n  const totalInterest =\n    (terms.duration / 365) * (parseInt(terms.apr, 10) / 100) * terms.principal;\n\n  const resetForm = () => setTerms(initialState);\n\n  const doSigning = async () => {\n    const typedLoanTermsData = {\n      LoanTerms: [\n        { name: \"durationSecs\", type: \"uint256\" },\n        { name: \"principal\", type: \"uint256\" },\n        { name: \"interest\", type: \"uint256\" },\n        { name: \"collateralTokenId\", type: \"uint256\" },\n        { name: \"payableCurrency\", type: \"address\" },\n      ],\n      // primaryType: \"LoanTerms\"\n    };\n\n    const domainData = {\n      verifyingContract: addresses.target.originationController,\n      name: \"OriginationController\",\n      version: \"1\",\n      // chainId: wallet.chainId,\n      chainId: \"1\",\n    };\n\n    const newLoanTerms = {\n      durationSecs: terms.duration * SECONDS_IN_DAY,\n      principal: ethers.utils\n        .parseUnits(\n          terms.principal.toFixed(oldTerms.payableTokenDecimals),\n          oldTerms.payableTokenDecimals\n        )\n        .toString(),\n      interest: ethers.utils\n        .parseUnits(\n          totalInterest.toFixed(oldTerms.payableTokenDecimals),\n          oldTerms.payableTokenDecimals\n        )\n        .toString(),\n      // collateralTokenId: oldTerms.collateralTokenId.toNumber(),\n      collateralTokenId: 295,\n      payableCurrency: oldTerms.payableCurrency,\n    };\n\n    // const provider = new ethers.providers.Web3Provider(wallet.ethereum);\n    // const signer = provider.getSigner();\n\n    const sig = fromRpcSig(\n      await signer._signTypedData(domainData, typedLoanTermsData, newLoanTerms)\n    );\n\n    // Generate EIP-712 signature to sign\n    // Download terms and signature as JSON\n    const payload = {\n      legacy: loan.legacy,\n      borrower: loan.borrower,\n      lender: loan.lender,\n      contracts: {\n        sourceLoanCore: loan.legacy\n          ? chainInfo.contractAddresses.legacy.loanCore\n          : chainInfo.contractAddresses.current.loanCore,\n        targetLoanCore: addresses.target.loanCore,\n        sourceRepaymentController: loan.legacy\n          ? chainInfo.contractAddresses.legacy.repaymentController\n          : chainInfo.contractAddresses.current.repaymentController,\n        targetOriginationController: addresses.target.originationController,\n      },\n      loanId: loan.loanId.toString(),\n      newLoanTerms,\n      signature: {\n        v: sig.v,\n        r: Buffer.from(sig.r).toString(\"base64\"),\n        s: Buffer.from(sig.s).toString(\"base64\"),\n      },\n      // collateral: loan.collateral,\n      metadata: {\n        totalInterest,\n        payableTokenDecimals: oldTerms.payableTokenDecimals,\n        payableTokenSymbol: oldTerms.payableTokenSymbol,\n        dueDate: moment().add(terms.duration, \"days\").toISOString(),\n      },\n    };\n\n    const blob = new Blob([JSON.stringify(payload, null, 4)], {\n      type: \"text/plain;charset=utf-8\",\n    });\n\n    saveAs(blob, `rollover_data_${Date.now()}.json`);\n  };\n\n  return (\n    <div className=\"rollover-form\">\n      <div className=\"row\">\n        <form>\n          <div className=\"row\">\n            <div className=\"four columns\">\n              <label>Principal</label>\n            </div>\n            <div className=\"six columns\">\n              <input\n                type=\"number\"\n                onChange={updateForm(\"principal\")}\n                value={terms.principal}\n              />\n            </div>\n            <div className=\"two columns\">\n              <strong>{oldTerms.payableTokenSymbol}</strong>\n            </div>\n          </div>\n          <div className=\"row input-row\">\n            <div className=\"four columns\">\n              <label>APR</label>\n            </div>\n            <div className=\"six columns\">\n              <input\n                type=\"number\"\n                onChange={updateForm(\"apr\")}\n                value={terms.apr}\n              />\n            </div>\n            <div className=\"two columns\">\n              <strong>%</strong>\n            </div>\n          </div>\n          <div className=\"row total-interest-row\">\n            <div className=\"four columns\">\n              <em>Total Interest:</em>\n            </div>\n            <div className=\"six columns\">\n              <em>\n                {totalInterest} {oldTerms.payableTokenSymbol}\n              </em>\n            </div>\n          </div>\n          <div className=\"row input-row\">\n            <div className=\"four columns\">\n              <label>Duration</label>\n            </div>\n            <div className=\"six columns\">\n              {/* TODO: Put implicit due date */}\n              <input\n                type=\"number\"\n                onChange={updateForm(\"duration\")}\n                value={terms.duration}\n              />\n            </div>\n            <div className=\"two columns\">\n              <strong>Days</strong>\n            </div>\n            <div className=\"row total-interest-row\">\n              <div className=\"four columns\">\n                <em>Due Date:</em>\n              </div>\n              <div className=\"six columns\">\n                <em>{moment().add(terms.duration, \"days\").format(\"LL\")}</em>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div className=\"row button-container\">\n        <div className=\"six columns\">\n          <button className=\"button reset-button\" onClick={resetForm}>\n            Reset\n          </button>\n        </div>\n        <div className=\"six columns\">\n          <button className=\"button-primary\" onClick={doSigning}>\n            Sign & Download JSON\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction ConnectPrompt() {\n  const [{ data }, connect] = useConnect();\n  const [mm, wc] = data?.connectors;\n  return (\n    <div className=\"centered\">\n      <button\n        className=\"connect\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => connect(data?.connectors[0])}\n      >\n        <img src={MMLogo} alt=\"Metamask\" className=\"mm-logo\" />\n        &nbsp; Connect Metamask\n      </button>\n      &nbsp;&nbsp;\n      <button\n        className=\"connect\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => connect(wc)}\n      >\n        Wallet Connect\n      </button>\n    </div>\n  );\n}\n\nwindow.instructions = () => {\n  const str = `\nFlash Rollover Prerequisites:\n\n1. Make sure borrower has approved BorrowerNote for withdrawal by flash rollover contract\n2. Make sure lender has approved OriginationController to withdraw tokens\n3. Make sure lender has approved FlashRollover to withdraw tokens\n`;\n\n  console.log(str);\n};\n\nexport default Main;\n","export const addresses = {\n  legacy: {\n    lenderNote: \"0xD96e4D03420aA33a3FE91f57D03D8Ef69dE1e863\",\n    loanCore: \"0x59e57F9A313A2EB1c7357eCc331Ddca14209F403\",\n    repaymentController: \"0x945afF9253C840401166c3d24fF78180Fe0A05df\",\n    originationController: \"0x0585a675029C68A6AF41Ba1350BC8172D6172320\",\n    borrowerNote: \"0x9B458e2B9c0Cd34A62A26B846f45Eb829aEbC96E\",\n  },\n  current: {\n    lenderNote: \"0x6BD1476dD1D57f08670AF6720CA2eDf37B10746E\",\n    // loanCore: \"0x606E4a441290314aEaF494194467Fd2Bb844064A\",\n    loanCore: \"0x7691EE8feBD406968D46F9De96cB8CC18fC8b325\",\n\n    // repaymentController: \"0x9eCE636e942bCb67f9E0b7B6C51A56570EF6F38d\",\n    repaymentController: \"0xD7B4586b4eD87e2B98aD2df37A6c949C5aB1B1dB\",\n    originationController: \"0x7C2A27485B69f490945943464541236a025161F6\",\n    // borrowerNote: \"0xe00B37ad3a165A66C20cA3E0170e4749c20eF58c\",\n    borrowerNote: \"0xc3231258D6Ed397Dce7a52a27f816c8f41d22151\",\n  },\n  common: {\n    // assetWrapper: \"0x1F563CDd688ad47b75E474FDe74E87C643d129b7\",\n    assetWrapper: \"0x5CB803c31e8f4F895a3AB19d8218646dC63e9Dc2\",\n    flashRollover: \"0x24611Fad669350cA869FBed4B62877d1a409dA12\",\n  },\n  tokens: {\n    usdc: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n    weth: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n  },\n  target: {\n    originationController: \"0xf72516d0d038Ec8c0Ef0Fe8f7f4EEaD8Ee1c31E2\",\n    flashRollover: \"0x7C866452Ef99f82e900DD3D35f0ad1F1E3E10b11\",\n    lenderNote: \"0xe1eF2656D965ac9E3Fe151312f19F3D4C5f0EfA3\",\n    // silver\n    // flashRollover: \"0x27Ed938FF4d532332C2701866D7869EDcB39d7E4\",\n    loanCore: \"0x7691EE8feBD406968D46F9De96cB8CC18fC8b325\",\n    repaymentController: \"0xD7B4586b4eD87e2B98aD2df37A6c949C5aB1B1dB\",\n    borrowerNote: \"0xc3231258D6Ed397Dce7a52a27f816c8f41d22151\",\n    assetWrapper: \"0x5CB803c31e8f4F895a3AB19d8218646dC63e9Dc2\",\n  },\n};\n","import { ethers } from \"ethers\";\nimport { useSigner, useContract, erc20ABI, useWaitForTransaction } from \"wagmi\";\nimport { useState } from \"react\";\nimport RepaymentControllerAbi from \"./abis/repayment-controller.json\";\nimport promissoryNoteAbi from \"./abis/promissory-note.json\";\nimport FlashRolloverAbi from \"./abis/flash-rollover.json\";\nimport AssetWrapperAbi from \"./abis/asset-wrapper.json\";\nimport loanCoreAbi from \"./abis/loan-core.json\";\nimport { toast } from \"react-toastify\";\nimport { addresses } from \"./config\";\nimport moment from \"moment\";\n\nexport const ExecuteRollover = () => {\n  // const wallet = useWallet();\n  // const borrowerChainInfo = usePawnBorrower();\n\n  const [{ data: signer }] = useSigner();\n  const [payload, setPayload] = useState(null);\n  const [selectedFile, setSelectedFile] = useState();\n  const [isFilePicked, setIsFilePicked] = useState(false);\n  const [repayNoteId, setRepayNoteId] = useState();\n  const [withdrawTokenId, setWithdrawTokenId] = useState();\n\n  const wethContract = useContract({\n    addressOrName: addresses.tokens.weth,\n    contractInterface: erc20ABI,\n    signerOrProvider: signer,\n  });\n\n  const repaymentContract = useContract({\n    addressOrName: addresses.target.repaymentController,\n    contractInterface: RepaymentControllerAbi,\n    signerOrProvider: signer,\n  });\n\n  const usdcContract = useContract({\n    addressOrName: addresses.tokens.usdc,\n    contractInterface: erc20ABI,\n    signerOrProvider: signer,\n  });\n\n  const borrowerNoteContract = useContract({\n    addressOrName: addresses.current.borrowerNote,\n    contractInterface: promissoryNoteAbi,\n    signerOrProvider: signer,\n  });\n\n  const flashRolloverContract = useContract({\n    addressOrName: addresses.target.flashRollover,\n    contractInterface: FlashRolloverAbi,\n    signerOrProvider: signer,\n  });\n\n  const assetWrapperContract = useContract({\n    addressOrName: addresses.target.assetWrapper,\n    contractInterface: AssetWrapperAbi,\n    signerOrProvider: signer,\n  });\n\n  const loanCoreContract = useContract({\n    addressOrName: addresses.target.loanCore,\n    contractInterface: loanCoreAbi,\n    signerOrProvider: signer,\n  });\n\n  console.log({ assetWrapperContract });\n  // eslint-disable-next-line no-unused-vars\n  const [_, wait] = useWaitForTransaction({\n    skip: true,\n  });\n\n  console.log({ contracts: { assetWrapperContract, loanCoreContract } });\n\n  window.payload = payload;\n  const approveWETH = async () => {\n    console.log(\"approving WETH...\");\n    try {\n      const { hash } = await wethContract.approve(\n        addresses.target.flashRollover,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving WETH...\",\n        success: \"WETH Approved\",\n        error: \"Failed to Approve WETH\",\n      });\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const approveUSDC = async () => {\n    console.log(`approving USDC...${addresses.target.flashRollover}`);\n    try {\n      const { hash } = await usdcContract.approve(\n        addresses.target.flashRollover,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving USDC...\",\n        success: \"USDC Approved\",\n        error: \"Failed to Approve USDC\",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const approveWETHRepay = async () => {\n    console.log(\"approving weth...\");\n    try {\n      const { hash } = await wethContract.approve(\n        addresses.target.repaymentController,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving weth...\",\n        success: \"weth Approved\",\n        error: \"Failed to Approve weth\",\n      });\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const approveUSDCRepay = async () => {\n    console.log(\"approving usdc...\");\n    try {\n      const { hash } = await usdcContract.approve(\n        addresses.target.repaymentController,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving usdc...\",\n        success: \"usdc Approved\",\n        error: \"Failed to Approve WETH\",\n      });\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const changeHandler = (event) => {\n    setSelectedFile(event.target.files[0]);\n    setIsFilePicked(true);\n  };\n\n  const handleSubmission = () => {\n    // Parse and set payload\n    const reader = new FileReader();\n\n    reader.addEventListener(\"load\", () => {\n      const payload = JSON.parse(reader.result);\n      setPayload(payload);\n    });\n\n    reader.readAsText(selectedFile);\n  };\n\n  const onRepay = async () => {\n    console.log(`repaying with...${addresses.target.repaymentController}`);\n    try {\n      const { hash } = await repaymentContract.repay(2);\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Repaying...\",\n        success: \"Repaid\",\n        error: \"Failed to repay\",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const onWithdraw = async () => {\n    console.log(`withdrawing from ... ${addresses.target.assetWrapper}`);\n\n    try {\n      const { hash } = await assetWrapperContract.withdraw(103);\n\n      const waitForTx = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForTx, {\n        pending: \"Withdrawing...\",\n        success: \"Success\",\n        error: \"Failed to Withdraw\",\n      });\n    } catch (e) {\n      toast.error(\"An Error Occured\");\n      console.log(\"Error \", e);\n    }\n  };\n\n  const doRollover = async () => {\n    // convert sigs to bytes\n    const r = Uint8Array.from(atob(payload.signature.r), (c) =>\n      c.charCodeAt(0)\n    );\n    const s = Uint8Array.from(atob(payload.signature.s), (c) =>\n      c.charCodeAt(0)\n    );\n    console.log(\"###### Payload Rollover :::: \", r, s, payload);\n\n    try {\n      console.log({ flashRolloverContract });\n      const { hash: rolloverHash } = await flashRolloverContract.rolloverLoan(\n        payload.contracts,\n        payload.loanId,\n        payload.newLoanTerms,\n        payload.signature.v,\n        r,\n        s,\n        { gasLimit: \"5000000\" }\n      );\n\n      const waitdoRollover = wait({ confirmations: 1, rolloverHash });\n      const response = await toast.promise(waitdoRollover, {\n        pending: \"Rollover...\",\n        success: \"Rollover Approved\",\n        error: \"Failed to Rollover \",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      console.log(\"ERror \", e);\n      toast.error(e);\n    }\n  };\n\n  if (!payload) {\n    return (\n      <div className=\"execute-container\">\n        <h3>Execute Rollover</h3>\n        {/* <button\n          style={{ background: \"lightgray\" }}\n          onClick={() => approveWETHRepay()}\n        >\n          Approve WETH Repayment\n        </button>\n        &nbsp;&nbsp;\n        <button\n          style={{ background: \"lightgray\" }}\n          onClick={() => approveUSDCRepay()}\n        >\n          Approve USDC Repayment\n        </button>\n        &nbsp;&nbsp;\n        <br />\n        <input\n          value={repayNoteId}\n          size={5}\n          style={{ padding: \"8px\" }}\n          onChange={(ev) => setRepayNoteId(ev.target.value)}\n        />\n        <button style={{ background: \"lightgray\" }} onClick={() => onRepay()}>\n          Repay\n        </button>\n        &nbsp;&nbsp;\n        <input\n          value={withdrawTokenId}\n          style={{ padding: \"8px\" }}\n          size={5}\n          onChange={(ev) => setWithdrawTokenId(ev.target.value)}\n        />\n        <button style={{ background: \"cyan\" }} onClick={() => onWithdraw()}>\n          Withdraw\n        </button> */}\n        <div className=\"row centered\">\n          <input type=\"file\" name=\"file\" onChange={changeHandler} />\n          <button\n            className=\"button-primary\"\n            onClick={handleSubmission}\n            disabled={!isFilePicked}\n          >\n            Upload JSON\n          </button>\n        </div>\n        <div>\n          <button\n            onClick={() => approveWETH()}\n            style={{ backgroundColor: \"white\" }}\n          >\n            Approve WETH (Rollover)\n          </button>\n          &nbsp; &nbsp;\n          <button\n            onClick={() => approveUSDC()}\n            style={{ backgroundColor: \"white\" }}\n          >\n            Approve USDC (Rollover)\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    const { loanId, newLoanTerms: terms, legacy, metadata } = payload;\n    const d = moment(Date.parse(metadata.dueDate));\n\n    return (\n      <div className=\"execute-container\">\n        <h3>Execute Rollover</h3>\n        <div className=\"row centered\">\n          <button className=\"button-primary\" onClick={() => setPayload(null)}>\n            Reset\n          </button>\n        </div>\n        <div className=\"row centered\">\n          <div className=\"loan card\">\n            <h5 className=\"bold\">\n              Loan ID {loanId.toString()}\n              {legacy && ` (Legacy)`}\n            </h5>\n            <p>\n              <strong>Principal:</strong>{\" \"}\n              {ethers.utils.formatUnits(\n                terms.principal,\n                metadata.payableTokenDecimals\n              )}{\" \"}\n              {metadata.payableTokenSymbol}\n            </p>\n            <p>\n              <strong>Interest:</strong>{\" \"}\n              {ethers.utils.formatUnits(\n                terms.interest,\n                metadata.payableTokenDecimals\n              )}{\" \"}\n              {metadata.payableTokenSymbol}\n            </p>\n            <p>\n              <strong>{`Due ${d.fromNow()} (${d.format(\"LLL\")})`}</strong>\n            </p>\n            <button className=\"button-primary\" onClick={doRollover}>\n              Rollover\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","export default __webpack_public_path__ + \"static/media/mm_logo.45038d58.svg\";","import { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport LegacyPromissoryNoteAbi from \"./abis/legacy-promissory-note.json\";\nimport LegacyLoanCoreAbi from \"./abis/legacy-loan-core.json\";\nimport PromissoryNoteAbi from \"./abis/promissory-note.json\";\nimport LoanCoreAbi from \"./abis/loan-core.json\";\nimport AssetWrapperAbi from \"./abis/asset-wrapper.json\";\nimport FlashRolloverAbi from \"./abis/flash-rollover.json\";\nimport { useAccount, useConnect, useProvider, useSigner } from \"wagmi\";\nimport ERC20Abi from \"./abis/erc20.json\";\nimport ERC721Abi from \"./abis/erc721.json\";\nimport ERC1155Abi from \"./abis/erc1155.json\";\nimport { addresses } from \"./config\";\n// export const addresses = {\n//     legacy: {\n//         lenderNote: '0xD96e4D03420aA33a3FE91f57D03D8Ef69dE1e863',\n//         loanCore: '0x59e57F9A313A2EB1c7357eCc331Ddca14209F403',\n//         repaymentController: '0x945afF9253C840401166c3d24fF78180Fe0A05df',\n//         originationController: '0x0585a675029C68A6AF41Ba1350BC8172D6172320'\n//     },\n//     current: {\n//         lenderNote: '0x6BD1476dD1D57f08670AF6720CA2eDf37B10746E',\n//         loanCore: '0x606E4a441290314aEaF494194467Fd2Bb844064A',\n//         repaymentController: '0x9eCE636e942bCb67f9E0b7B6C51A56570EF6F38d',\n//         originationController: '0x7C2A27485B69f490945943464541236a025161F6'\n//     },\n//     common: {\n//         assetWrapper: '0x1F563CDd688ad47b75E474FDe74E87C643d129b7',\n//         flashRollover: '0x24611Fad669350cA869FBed4B62877d1a409dA12'\n//     },\n//     tokens: {\n//         usdc: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n//         weth: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n//     }\n// }\n\nexport function usePawnLender() {\n  const provider = useProvider();\n  const [{ data }] = useAccount();\n\n  // const account = data?.address;\n  const account = \"0x66ceac5EE8F093059C4BC9628C06e63076505B15\";\n\n  const [chainInfo, setChainInfo] = useState(null);\n\n  useEffect(() => {\n    const getInfo = async () => {\n      if (!account) return;\n      console.log(account);\n\n      // Find active loans\n      // For lender note, check owned tokens - for each one, get the loan ID\n      const legacyLenderNote = new ethers.Contract(\n        addresses.legacy.lenderNote,\n        LegacyPromissoryNoteAbi,\n        provider\n      );\n      const lenderNote = new ethers.Contract(\n        addresses.target.lenderNote,\n        PromissoryNoteAbi,\n        provider\n      );\n      // const legacyLenderNote = new ethers.Contract(\n      //   addresses.legacy.borrowerNote,\n      //   LegacyPromissoryNoteAbi,\n      //   provider\n      // );\n      // const lenderNote = new ethers.Contract(\n      //   addresses.current.borrowerNote,\n      //   PromissoryNoteAbi,\n      //   provider\n      // );\n      const legacyBorrowerNote = new ethers.Contract(\n        addresses.legacy.borrowerNote,\n        LegacyPromissoryNoteAbi,\n        provider\n      );\n      const borrowerNote = new ethers.Contract(\n        addresses.current.borrowerNote,\n        PromissoryNoteAbi,\n        provider\n      );\n      const legacyLoanCore = new ethers.Contract(\n        addresses.legacy.loanCore,\n        LegacyLoanCoreAbi,\n        provider\n      );\n      const loanCore = new ethers.Contract(\n        addresses.target.loanCore,\n        LoanCoreAbi,\n        provider\n      );\n      const assetWrapper = new ethers.Contract(\n        addresses.common.assetWrapper,\n        AssetWrapperAbi,\n        provider\n      );\n      const flashRollover = new ethers.Contract(\n        addresses.common.flashRollover,\n        FlashRolloverAbi,\n        provider\n      );\n\n      const usdc = new ethers.Contract(\n        addresses.tokens.usdc,\n        ERC20Abi,\n        provider\n      );\n      const weth = new ethers.Contract(\n        addresses.tokens.weth,\n        ERC20Abi,\n        provider\n      );\n\n      console.log(\"ACCOUNT\", account);\n\n      const ethBalance = await provider.getBalance(account);\n      const usdcBalance = await usdc.balanceOf(account);\n      const wethBalance = await weth.balanceOf(account);\n\n      console.log(\"COIN BALANCES\")\n\n      const numLenderNotes = await lenderNote.balanceOf(account);\n      const numLegacyLenderNotes = await legacyLenderNote.balanceOf(account);\n\n      //   console.log(\"BALANCES\", numLenderNotes, numLegacyLenderNotes);\n\n      const loans = [];\n      window.contracts = {\n        assetWrapper,\n        flashRollover,\n        usdc,\n        loanCore,\n        legacyLoanCore,\n        lenderNote,\n        borrowerNote,\n      };\n      for (let i = 0; i < numLenderNotes; i++) {\n        const lenderNoteId = await lenderNote.tokenOfOwnerByIndex(account, i);\n        const loanId = await lenderNote.loanIdByNoteId(lenderNoteId);\n        const loanData = await loanCore.getLoan(loanId);\n        console.log(\"BORORWER NOTE ID\", loanData.borrowerNoteId);\n\n        // Active state\n        if (loanData.state === 2) {\n          // const borrower = await borrowerNote.ownerOf(loanData.borrowerNoteId);\n          // console.log(\"BORORWER\", borrower);\n          // Find collateral\n          const tokenId = loanData.terms.collateralTokenId;\n          const erc20Holdings = [];\n          const erc721Holdings = [];\n          const erc1155Holdings = [];\n\n          let failed = false;\n          let i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC20Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC20Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n              const decimals = await token.decimals();\n\n              erc20Holdings.push({\n                amount: holding.amount,\n                tokenAddress: holding.tokenAddress,\n                token,\n                tokenName,\n                symbol,\n                decimals,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC721Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC721Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc721Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC1155Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC1155Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc1155Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                amount: holding.amount,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          const payableToken = new ethers.Contract(\n            loanData.terms.payableCurrency,\n            ERC20Abi,\n            provider\n          );\n\n          loans.push({\n            legacy: false,\n            loanId: loanId,\n            lender: account,\n            // borrower,\n            data: {\n              state: loanData.state,\n              dueDate: loanData.dueDate.toNumber(),\n              borrowerNoteId: loanData.borrowerNoteId.toNumber(),\n              lenderNoteId: loanData.lenderNoteId.toNumber(),\n            },\n            terms: {\n              collateralTokenId: loanData.terms.collateralTokenId,\n              payableCurrency: loanData.terms.payableCurrency,\n              payableToken: payableToken,\n              payableTokenName: await payableToken.name(),\n              payableTokenSymbol: await payableToken.symbol(),\n              payableTokenDecimals: (await payableToken.decimals()) || 18,\n              durationSecs: loanData.terms.durationSecs,\n              principal: loanData.terms.principal,\n              interest: loanData.terms.interest,\n            },\n            collateral: {\n              erc20: erc20Holdings,\n              erc721: erc721Holdings,\n              erc1155: erc1155Holdings,\n            },\n          });\n        }\n      }\n\n      for (let i = 0; i < numLegacyLenderNotes; i++) {\n        const lenderNoteId = await legacyLenderNote.tokenOfOwnerByIndex(\n          account,\n          i\n        );\n        const loanId = await legacyLenderNote.loanIdByNoteId(lenderNoteId);\n        const loanData = await legacyLoanCore.getLoan(loanId);\n\n        // Active state\n        if (loanData.state === 2) {\n          // const borrower = await legacyBorrowerNote.ownerOf(loanData.borrowerNoteId);\n          // Find collateral\n          const tokenId = loanData.terms.collateralTokenId;\n          const erc20Holdings = [];\n          const erc721Holdings = [];\n          const erc1155Holdings = [];\n\n          let failed = false;\n          let i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC20Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC20Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n              const decimals = await token.decimals();\n\n              erc20Holdings.push({\n                amount: holding.amount,\n                tokenAddress: holding.tokenAddress,\n                token,\n                tokenName,\n                symbol,\n                decimals,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC721Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC721Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc721Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC1155Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC1155Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc1155Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                amount: holding.amount,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          const payableToken = new ethers.Contract(\n            loanData.terms.payableCurrency,\n            ERC20Abi,\n            provider\n          );\n\n          loans.push({\n            legacy: true,\n            loanId: loanId,\n            lender: account,\n            // borrower,\n            data: {\n              state: loanData.state,\n              dueDate: loanData.dueDate.toNumber(),\n              borrowerNoteId: loanData.borrowerNoteId.toNumber(),\n              lenderNoteId: loanData.lenderNoteId.toNumber(),\n            },\n            terms: {\n              collateralTokenId: loanData.terms.collateralTokenId,\n              payableCurrency: loanData.terms.payableCurrency,\n              payableToken: payableToken,\n              payableTokenName: await payableToken.name(),\n              payableTokenSymbol: await payableToken.symbol(),\n              payableTokenDecimals: (await payableToken.decimals()) || 18,\n              durationSecs: loanData.terms.durationSecs,\n              principal: loanData.terms.principal,\n              interest: loanData.terms.interest,\n            },\n            collateral: {\n              erc20: erc20Holdings,\n              erc721: erc721Holdings,\n              erc1155: erc1155Holdings,\n            },\n          });\n        }\n      }\n\n      const info = {\n        account,\n        balances: {\n          eth: ethBalance,\n          usdc: usdcBalance,\n          weth: wethBalance,\n        },\n        loans,\n        contracts: {\n          legacyLenderNote,\n          lenderNote,\n          legacyLoanCore,\n          loanCore,\n          assetWrapper,\n          flashRollover,\n        },\n        contractAddresses: addresses,\n      };\n\n      setChainInfo((chainInfo) => Object.assign({ ...chainInfo }, info));\n    };\n\n    getInfo();\n  }, [account, provider]);\n\n  // const ethBalance = await ethers.provider.getBalance()\n\n  // For each loan, get all owned assets\n\n  // Return active loans\n  // Return contract addresses\n  return chainInfo;\n}\n","import { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport LegacyPromissoryNoteAbi from \"./abis/legacy-promissory-note.json\";\nimport LegacyLoanCoreAbi from \"./abis/legacy-loan-core.json\";\nimport PromissoryNoteAbi from \"./abis/promissory-note.json\";\nimport LoanCoreAbi from \"./abis/loan-core.json\";\nimport AssetWrapperAbi from \"./abis/asset-wrapper.json\";\nimport FlashRolloverAbi from \"./abis/flash-rollover.json\";\nimport { useAccount, useConnect, useProvider, useSigner } from \"wagmi\";\nimport ERC20Abi from \"./abis/erc20.json\";\nimport ERC721Abi from \"./abis/erc721.json\";\nimport ERC1155Abi from \"./abis/erc1155.json\";\nimport { addresses } from \"./config\";\n// export const addresses = {\n//     legacy: {\n//         lenderNote: '0xD96e4D03420aA33a3FE91f57D03D8Ef69dE1e863',\n//         loanCore: '0x59e57F9A313A2EB1c7357eCc331Ddca14209F403',\n//         repaymentController: '0x945afF9253C840401166c3d24fF78180Fe0A05df',\n//         originationController: '0x0585a675029C68A6AF41Ba1350BC8172D6172320'\n//     },\n//     current: {\n//         lenderNote: '0x6BD1476dD1D57f08670AF6720CA2eDf37B10746E',\n//         loanCore: '0x606E4a441290314aEaF494194467Fd2Bb844064A',\n//         repaymentController: '0x9eCE636e942bCb67f9E0b7B6C51A56570EF6F38d',\n//         originationController: '0x7C2A27485B69f490945943464541236a025161F6'\n//     },\n//     common: {\n//         assetWrapper: '0x1F563CDd688ad47b75E474FDe74E87C643d129b7',\n//         flashRollover: '0x24611Fad669350cA869FBed4B62877d1a409dA12'\n//     },\n//     tokens: {\n//         usdc: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n//         weth: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n//     }\n// }\n\n// export const addresses = {\n//   legacy: {\n//     lenderNote: \"0xD96e4D03420aA33a3FE91f57D03D8Ef69dE1e863\",\n//     loanCore: \"0x59e57F9A313A2EB1c7357eCc331Ddca14209F403\",\n//     repaymentController: \"0x945afF9253C840401166c3d24fF78180Fe0A05df\",\n//     originationController: \"0x0585a675029C68A6AF41Ba1350BC8172D6172320\",\n//     borrowerNote: \"0x9B458e2B9c0Cd34A62A26B846f45Eb829aEbC96E\",\n//   },\n//   current: {\n//     lenderNote: \"0x6BD1476dD1D57f08670AF6720CA2eDf37B10746E\",\n//     loanCore: \"0x606E4a441290314aEaF494194467Fd2Bb844064A\",\n//     repaymentController: \"0x9eCE636e942bCb67f9E0b7B6C51A56570EF6F38d\",\n//     originationController: \"0x7C2A27485B69f490945943464541236a025161F6\",\n//     borrowerNote: \"0xe00B37ad3a165A66C20cA3E0170e4749c20eF58c\",\n//   },\n//   common: {\n//     assetWrapper: \"0x1F563CDd688ad47b75E474FDe74E87C643d129b7\",\n//     flashRollover: \"0x24611Fad669350cA869FBed4B62877d1a409dA12\",\n//   },\n//   tokens: {\n//     usdc: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n//     weth: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n//   },\n// };\n\nexport function usePawnBorrower() {\n  const provider = useProvider();\n  const [{ data }] = useAccount();\n\n  // const account = data?.address;\n  const account = \"0xD96352D264526e78a92229c83A29b1d7159CE031\";\n\n  const [chainInfo, setChainInfo] = useState(null);\n\n  useEffect(() => {\n    const getInfo = async () => {\n      if (!account) return;\n      console.log(account);\n\n      // Find active loans\n      // For lender note, check owned tokens - for each one, get the loan ID\n      // const legacyLenderNote = new ethers.Contract(\n      //   addresses.legacy.lenderNote,\n      //   LegacyPromissoryNoteAbi,\n      //   provider\n      // );\n      // const lenderNote = new ethers.Contract(\n      //   addresses.current.lenderNote,\n      //   PromissoryNoteAbi,\n      //   provider\n      // );\n      // const legacyLenderNote = new ethers.Contract(\n      //   addresses.legacy.borrowerNote,\n      //   LegacyPromissoryNoteAbi,\n      //   provider\n      // );\n      // const lenderNote = new ethers.Contract(\n      //   addresses.current.borrowerNote,\n      //   PromissoryNoteAbi,\n      //   provider\n      // );\n      const legacyBorrowerNote = new ethers.Contract(\n        addresses.legacy.borrowerNote,\n        LegacyPromissoryNoteAbi,\n        provider\n      );\n      const borrowerNote = new ethers.Contract(\n        addresses.current.borrowerNote,\n        PromissoryNoteAbi,\n        provider\n      );\n      const legacyLoanCore = new ethers.Contract(\n        addresses.legacy.loanCore,\n        LegacyLoanCoreAbi,\n        provider\n      );\n      const loanCore = new ethers.Contract(\n        addresses.current.loanCore,\n        LoanCoreAbi,\n        provider\n      );\n      const assetWrapper = new ethers.Contract(\n        addresses.common.assetWrapper,\n        AssetWrapperAbi,\n        provider\n      );\n      const flashRollover = new ethers.Contract(\n        addresses.common.flashRollover,\n        FlashRolloverAbi,\n        provider\n      );\n\n      const usdc = new ethers.Contract(\n        addresses.tokens.usdc,\n        ERC20Abi,\n        provider\n      );\n      const weth = new ethers.Contract(\n        addresses.tokens.weth,\n        ERC20Abi,\n        provider\n      );\n\n      const ethBalance = await provider.getBalance(account);\n      const usdcBalance = await usdc.balanceOf(account);\n      const wethBalance = await weth.balanceOf(account);\n\n      // const numLenderNotes = await lenderNote.balanceOf(account);\n      // const numLegacyLenderNotes = await legacyLenderNote.balanceOf(account);\n\n      const numBorrowerNote = await borrowerNote.balanceOf(account);\n      const numLegacyBorrowerNote = await legacyBorrowerNote.balanceOf(account);\n\n      console.log(\n        \"BALANCES\",\n        numBorrowerNote.toString(),\n        numLegacyBorrowerNote\n      );\n\n      const loans = [];\n      window.contracts = {\n        assetWrapper,\n        flashRollover,\n        usdc,\n        loanCore,\n        legacyLoanCore,\n        // lenderNote,\n        borrowerNote,\n      };\n      for (let i = 0; i < numBorrowerNote; i++) {\n        const lenderNoteId = await borrowerNote.tokenOfOwnerByIndex(account, i);\n        const loanId = await borrowerNote.loanIdByNoteId(lenderNoteId);\n        const loanData = await loanCore.getLoan(loanId);\n        console.log(\"BORORWER NOTE ID\", loanData.borrowerNoteId);\n\n        // Active state\n        if (loanData.state === 2) {\n          // const borrower = await borrowerNote.ownerOf(loanData.borrowerNoteId);\n          // console.log(\"BORORWER\", borrower);\n          // Find collateral\n          const tokenId = loanData.terms.collateralTokenId;\n          const erc20Holdings = [];\n          const erc721Holdings = [];\n          const erc1155Holdings = [];\n\n          let failed = false;\n          let i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC20Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC20Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n              const decimals = await token.decimals();\n\n              erc20Holdings.push({\n                amount: holding.amount,\n                tokenAddress: holding.tokenAddress,\n                token,\n                tokenName,\n                symbol,\n                decimals,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC721Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC721Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc721Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC1155Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC1155Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc1155Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                amount: holding.amount,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          const payableToken = new ethers.Contract(\n            loanData.terms.payableCurrency,\n            ERC20Abi,\n            provider\n          );\n\n          loans.push({\n            legacy: false,\n            loanId: loanId,\n            borrower: account,\n            // borrower,\n            data: {\n              state: loanData.state,\n              dueDate: loanData.dueDate.toNumber(),\n              borrowerNoteId: loanData.borrowerNoteId.toNumber(),\n              lenderNoteId: loanData.lenderNoteId.toNumber(),\n            },\n            terms: {\n              collateralTokenId: loanData.terms.collateralTokenId,\n              payableCurrency: loanData.terms.payableCurrency,\n              payableToken: payableToken,\n              payableTokenName: await payableToken.name(),\n              payableTokenSymbol: await payableToken.symbol(),\n              payableTokenDecimals: (await payableToken.decimals()) || 18,\n              durationSecs: loanData.terms.durationSecs,\n              principal: loanData.terms.principal,\n              interest: loanData.terms.interest,\n            },\n            collateral: {\n              erc20: erc20Holdings,\n              erc721: erc721Holdings,\n              erc1155: erc1155Holdings,\n            },\n          });\n        }\n      }\n\n      for (let i = 0; i < numLegacyBorrowerNote; i++) {\n        const borrowerNoteId = await legacyBorrowerNote.tokenOfOwnerByIndex(\n          account,\n          i\n        );\n        const loanId = await legacyBorrowerNote.loanIdByNoteId(borrowerNoteId);\n        const loanData = await legacyLoanCore.getLoan(loanId);\n\n        // Active state\n        if (loanData.state === 2 || loanData.state === 3) {\n          // const borrower = await legacyBorrowerNote.ownerOf(loanData.borrowerNoteId);\n          // Find collateral\n          const tokenId = loanData.terms.collateralTokenId;\n          const erc20Holdings = [];\n          const erc721Holdings = [];\n          const erc1155Holdings = [];\n\n          let failed = false;\n          let i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC20Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC20Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n              const decimals = await token.decimals();\n\n              erc20Holdings.push({\n                amount: holding.amount,\n                tokenAddress: holding.tokenAddress,\n                token,\n                tokenName,\n                symbol,\n                decimals,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC721Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC721Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc721Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC1155Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC1155Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc1155Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                amount: holding.amount,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          const payableToken = new ethers.Contract(\n            loanData.terms.payableCurrency,\n            ERC20Abi,\n            provider\n          );\n\n          loans.push({\n            legacy: true,\n            loanId: loanId,\n            lender: account,\n            // borrower,\n            data: {\n              state: loanData.state,\n              dueDate: loanData.dueDate.toNumber(),\n              borrowerNoteId: loanData.borrowerNoteId.toNumber(),\n              lenderNoteId: loanData.lenderNoteId.toNumber(),\n            },\n            terms: {\n              collateralTokenId: loanData.terms.collateralTokenId,\n              payableCurrency: loanData.terms.payableCurrency,\n              payableToken: payableToken,\n              payableTokenName: await payableToken.name(),\n              payableTokenSymbol: await payableToken.symbol(),\n              payableTokenDecimals: (await payableToken.decimals()) || 18,\n              durationSecs: loanData.terms.durationSecs,\n              principal: loanData.terms.principal,\n              interest: loanData.terms.interest,\n            },\n            collateral: {\n              erc20: erc20Holdings,\n              erc721: erc721Holdings,\n              erc1155: erc1155Holdings,\n            },\n          });\n        }\n      }\n\n      const info = {\n        account,\n        balances: {\n          eth: ethBalance,\n          usdc: usdcBalance,\n          weth: wethBalance,\n        },\n        loans,\n        contracts: {\n          legacyBorrowerNote,\n          borrowerNote,\n          legacyLoanCore,\n          loanCore,\n          assetWrapper,\n          flashRollover,\n        },\n        contractAddresses: addresses,\n      };\n\n      setChainInfo((chainInfo) => Object.assign({ ...chainInfo }, info));\n    };\n\n    getInfo();\n  }, [account, provider]);\n\n  // const ethBalance = await ethers.provider.getBalance()\n\n  // For each loan, get all owned assets\n\n  // Return active loans\n  // Return contract addresses\n  return chainInfo;\n}\n","import RepaymentControllerAbi from \"./abis/repayment-controller.json\";\nimport { useSigner, useContract, erc20ABI, useWaitForTransaction } from \"wagmi\";\nimport { useApproveERC20 } from \"./useApproveERC20\";\nimport { toast } from \"react-toastify\";\nimport { addresses } from \"./config\";\n\nexport const usePayLoan = ({\n  payableCurrency,\n  borrowerNoteId,\n  repaymentController,\n}) => {\n  const [{ data: signer }] = useSigner();\n\n  const { doApprove } = useApproveERC20({\n    tokenAddress: payableCurrency,\n    spender: repaymentController,\n  });\n  const repaymentContract = useContract({\n    addressOrName: repaymentController,\n    contractInterface: RepaymentControllerAbi,\n    signerOrProvider: signer,\n  });\n\n  // eslint-disable-next-line no-unused-vars\n  const [_, wait] = useWaitForTransaction({\n    skip: true,\n  });\n\n  const doRepay = async () => {\n    // approve repayment controller spending payable currency\n    doApprove();\n\n    console.log(`repaying with...${addresses.target.repaymentController}`);\n    try {\n      const { hash } = await repaymentContract.repay(borrowerNoteId);\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Repaying...\",\n        success: \"Repaid\",\n        error: \"Failed to repay\",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  return { doRepay };\n};\n","import { useEffect } from \"react\";\nimport { useSigner, useContract, erc20ABI, useWaitForTransaction } from \"wagmi\";\nimport { addresses } from \"./config\";\nimport { toast } from \"react-toastify\";\nimport { ethers } from \"ethers\";\n\nexport const useApproveERC20 = ({ tokenAddress, spender }) => {\n  const [{ data: signer }] = useSigner();\n  const erc20Contract = useContract({\n    addressOrName: tokenAddress,\n    contractInterface: erc20ABI,\n    signerOrProvider: signer,\n  });\n  // eslint-disable-next-line no-unused-vars\n  const [_, wait] = useWaitForTransaction({\n    skip: true,\n  });\n\n  const doApprove = async () => {\n    console.log(`approving ${spender} to spend ${tokenAddress}`);\n    try {\n      const { hash } = await erc20Contract.approve(\n        spender,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving ERC20...\",\n        success: \"ERC20 Approved\",\n        error: \"Failed to Approve ERC20\",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  return { doApprove };\n};\n","import { useState } from \"react\";\nimport { CollateralList, RolloverSigningForm } from \"./App\";\nimport { useSigner, useContract, useWaitForTransaction } from \"wagmi\";\nimport { addresses } from \"./config\";\nimport promissoryNoteAbi from \"./abis/promissory-note.json\";\nimport { toast } from \"react-toastify\";\nimport { ethers } from \"ethers\";\nimport { usePayLoan } from \"./usePayLoan\";\n\nexport const BorrowerLoanCard = ({ loan, index: key, chainInfo }) => {\n  const { loanId, terms, data, legacy } = loan;\n  const [showRollover, setShowRollover] = useState(false);\n  const [{ data: signer }] = useSigner();\n  console.log({ loan });\n  const { doRepay } = usePayLoan({\n    payableCurrency: terms?.payableCurrency,\n    borrowerNoteId: data?.borrowerNoteId,\n    repaymentController: addresses?.current?.repaymentController,\n  });\n\n  const borrowerNoteLookupKey = legacy ? \"legacy\" : \"current\";\n\n  const borrowerNoteContract = useContract({\n    addressOrName: addresses[borrowerNoteLookupKey].borrowerNote,\n    contractInterface: promissoryNoteAbi,\n    signerOrProvider: signer,\n  });\n\n  // eslint-disable-next-line no-unused-vars\n  const [_, wait] = useWaitForTransaction({\n    skip: true,\n  });\n\n  const approveNote = async (noteId) => {\n    console.log(\n      `approving Note ID ...${addresses.target.flashRollover} noteId ${noteId}`\n    );\n    try {\n      const { hash } = await borrowerNoteContract.approve(\n        addresses.target.flashRollover,\n        noteId\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving Borrower Note...\",\n        success: \"Note Approved\",\n        error: \"Failed to Approve Note\",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  return (\n    <div className=\"loan card\" key={key}>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <button\n          style={{ background: \"white\" }}\n          onClick={() => approveNote(loan?.data?.borrowerNoteId)}\n          disabled={!loan?.data?.borrowerNoteId}\n        >{`Approve Note ${loan?.data?.borrowerNoteId}`}</button>\n        <button style={{ background: \"white\" }} onClick={() => doRepay()}>\n          Pay Loan\n        </button>\n      </div>\n      <h5 className=\"bold\">\n        Loan ID {loanId.toString()}\n        {loan.legacy && ` (Legacy)`}\n      </h5>\n      <p>\n        <strong>State:</strong>\n        {loan?.data?.state === 2 ? \" active\" : \" repaid\"}\n      </p>\n      <p>\n        <strong>Borrower:</strong> {loan.borrower}\n      </p>\n      <p>\n        <strong>Principal:</strong>{\" \"}\n        {ethers.utils.formatUnits(terms.principal, terms.payableTokenDecimals)}{\" \"}\n        {terms.payableTokenSymbol}\n      </p>\n      <p>\n        <strong>Interest:</strong>{\" \"}\n        {ethers.utils.formatUnits(terms.interest, terms.payableTokenDecimals)}{\" \"}\n        {terms.payableTokenSymbol}\n      </p>\n      <CollateralList loanId={loanId} collateral={loan.collateral} />\n      {/* <p>\n        <strong>\n          <DueDate ts={data.dueDate} />\n        </strong>\n      </p> */}\n      <p>\n        <strong>\n          <a\n            className=\"rollover toggle\"\n            onClick={() => setShowRollover(!showRollover)}\n          >\n            {showRollover ? \"Hide\" : \"Rollover Loan\"}\n          </a>\n        </strong>\n      </p>\n      {showRollover && (\n        <RolloverSigningForm\n          loan={loan}\n          oldTerms={terms}\n          chainInfo={chainInfo}\n        />\n      )}\n    </div>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './skeleton.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}