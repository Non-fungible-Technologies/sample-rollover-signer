{"version":3,"sources":["App.js","ExecuteRollover.js","config.js","BorrowerLoanCard.js","mm_logo.svg","use-pawn-lender.js","usePawnBorrower.js","reportWebVitals.js","index.js"],"names":["ALCHEMY","App","useConnect","data","useAccount","disconnect","console","log","connected","className","style","border","color","onClick","path","element","Landing","SignerContainer","SubmitContainer","to","replace","ConnectPrompt","chainInfo","usePawnLender","useSigner","signer","wethContract","useContract","addressOrName","addresses","tokens","weth","contractInterface","erc20ABI","signerOrProvider","usdcContract","usdc","useWaitForTransaction","skip","wait","window","approveWETH","a","target","originationController","approve","ethers","constants","MaxInt256","hash","waitForApproval","confirmations","toast","promise","pending","success","error","response","approveUSDC","backgroundColor","loans","map","loan","i","LoanCard","index","borrowerChainInfo","usePawnBorrower","background","padding","key","loanId","terms","useState","showRollover","setShowRollover","toString","legacy","borrower","utils","formatUnits","principal","payableTokenDecimals","payableTokenSymbol","interest","CollateralList","collateral","RolloverSigningForm","oldTerms","erc20","c","amount","decimals","symbol","tokenAddress","erc721","tokenName","tokenId","toNumber","erc1155","prorated","durationSecs","principalBase","Number","interestBase","apr","initialState","duration","setTerms","updateForm","e","value","totalInterest","parseInt","doSigning","typedLoanTermsData","LoanTerms","name","type","domainData","verifyingContract","version","chainId","newLoanTerms","parseUnits","toFixed","collateralTokenId","payableCurrency","fromRpcSig","_signTypedData","sig","payload","lender","contracts","sourceLoanCore","contractAddresses","loanCore","current","targetLoanCore","sourceRepaymentController","repaymentController","targetOriginationController","signature","v","r","Buffer","from","s","metadata","dueDate","moment","add","toISOString","blob","Blob","JSON","stringify","saveAs","Date","now","onChange","format","connect","connectors","wc","cursor","src","MMLogo","alt","instructions","Main","InjectedConnector","defaultChains","options","shimDisconnect","WalletConnectConnector","rpc","1","qrcode","provider","providers","AlchemyProvider","position","ExecuteRollover","setPayload","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","RepaymentControllerAbi","flashRolloverContract","borrowerNote","promissoryNoteAbi","flashRollover","FlashRolloverAbi","assetWrapperContract","assetWrapper","AssetWrapperAbi","loanCoreContract","loanCoreAbi","doRollover","Uint8Array","atob","charCodeAt","rolloverLoan","gasLimit","rolloverHash","waitdoRollover","d","parse","fromNow","event","files","reader","FileReader","addEventListener","result","readAsText","disabled","lenderNote","common","BorrowerLoanCard","borrowerNoteLookupKey","borrowerNoteContract","approveNote","noteId","borrowerNoteId","useProvider","account","address","setChainInfo","useEffect","getInfo","legacyLenderNote","Contract","LegacyPromissoryNoteAbi","PromissoryNoteAbi","legacyLoanCore","LegacyLoanCoreAbi","LoanCoreAbi","ERC20Abi","getBalance","ethBalance","balanceOf","usdcBalance","wethBalance","numLenderNotes","numLegacyLenderNotes","tokenOfOwnerByIndex","lenderNoteId","loanIdByNoteId","getLoan","loanData","state","erc20Holdings","erc721Holdings","erc1155Holdings","failed","bundleERC20Holdings","holding","token","push","bundleERC721Holdings","ERC721Abi","bundleERC1155Holdings","ERC1155Abi","payableToken","payableTokenName","info","balances","eth","Object","assign","legacyBorrowerNote","numBorrowerNote","numLegacyBorrowerNote","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a43750a9.chunk.js","sourcesContent":["import { useState } from \"react\";\n// import { useWallet, UseWalletProvider } from \"use-wallet\";\nimport { ethers, providers } from \"ethers\";\nimport { saveAs } from \"file-saver\";\nimport { fromRpcSig } from \"ethereumjs-util\";\nimport moment from \"moment\";\nimport FlashRolloverAbi from \"./abis/flash-rollover.json\";\nimport RepaymentControllerAbi from \"./abis/repayment-controller.json\";\nimport AssetWrapperAbi from \"./abis/asset-wrapper.json\";\nimport loanCoreAbi from \"./abis/loan-core.json\";\nimport { addresses } from \"./config\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  Provider,\n  chain,\n  defaultChains,\n  useAccount,\n  useSigner,\n  useConnect,\n  useNetwork,\n  useContract,\n  erc20ABI,\n  useWaitForTransaction,\n} from \"wagmi\";\nimport { BorrowerLoanCard } from \"./BorrowerLoanCard\";\nimport { InjectedConnector } from \"wagmi/connectors/injected\";\nimport { BrowserRouter, Navigate, Routes, Route, Link } from \"react-router-dom\";\nimport promissoryNoteAbi from \"./abis/promissory-note.json\";\nimport MMLogo from \"./mm_logo.svg\";\nimport \"./App.css\";\nimport { usePawnLender } from \"./use-pawn-lender\";\nimport { usePawnBorrower } from \"./usePawnBorrower\";\nimport { WalletConnectConnector } from \"wagmi/connectors/walletConnect\";\nimport { ExecuteRollover } from \"./ExecuteRollover\";\n\nconst ALCHEMY = \"nFgwePbNgrn6330Zsxu7l5oKP_IW5xBg\";\n\nfunction Main() {\n  const provider = ({ chainId }) => {\n    return new providers.AlchemyProvider(chainId, ALCHEMY);\n  };\n  const connectors = ({ chainId }) => {\n    return [\n      new InjectedConnector({\n        defaultChains,\n        options: { shimDisconnect: true },\n      }),\n      new WalletConnectConnector({\n        options: {\n          rpc: {\n            1: `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY}`,\n          },\n          chainId: 1,\n          qrcode: true,\n        },\n      }),\n    ];\n  };\n  return (\n    <Provider connectors={connectors} provider={provider}>\n      <ToastContainer position=\"top-center\" />\n      <App />\n    </Provider>\n  );\n}\n\nfunction App() {\n  // const account = useAccount();\n  const [{ data }, connect] = useConnect();\n  const [{ data: account }, disconnect] = useAccount();\n\n  console.log(\"rendering\", data?.connected);\n\n  // if (\n  //   data &&\n  //   data?.connectors[0].chainId !== 1 &&\n  //   data?.connectors[0].chainId !== 1337\n  // ) {\n  //   return (\n  //     <div className=\"App\">\n  //       <div className=\"container main\">\n  //         <h1 className=\"bold\">Pawn.fi Rollover Signer</h1>\n  //         <hr />\n  //         <h4 className=\"bold header\">\n  //           Please switch your wallet network to Ethereum mainnet.\n  //         </h4>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container main\">\n        <h1 className=\"header bold\">Arcade Rollover Signer</h1>\n        <hr />\n        {data?.connected ? (\n          <>\n            <button\n              style={{ border: \"1px solid red\", color: \"white\" }}\n              onClick={() => disconnect()}\n            >\n              Disconnect\n            </button>\n            <BrowserRouter>\n              <Routes>\n                <Route path=\"/sample-rollover-signer\" element={<Landing />} />\n                <Route\n                  path=\"/sample-rollover-signer/lender\"\n                  element={<SignerContainer />}\n                />\n                <Route\n                  path=\"/sample-rollover-signer/borrower\"\n                  element={<SubmitContainer />}\n                />\n                <Route\n                  path=\"*\"\n                  element={<Navigate to=\"/sample-rollover-signer\" replace />}\n                />\n              </Routes>\n            </BrowserRouter>\n          </>\n        ) : (\n          <ConnectPrompt />\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Landing() {\n  return (\n    <div className=\"container\">\n      <div className=\"row centered\">\n        <Link to=\"/sample-rollover-signer/lender\">\n          <button className=\"button-primary\">Lender</button>\n        </Link>\n      </div>\n      <div className=\"row centered\">\n        <Link to=\"/sample-rollover-signer/borrower\">\n          <button className=\"button-primary\">Borrower</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nfunction SignerContainer() {\n  // const wallet = useWallet();\n  const chainInfo = usePawnLender();\n  const [{ data: signer }] = useSigner();\n\n  const wethContract = useContract({\n    addressOrName: addresses.tokens.weth,\n    contractInterface: erc20ABI,\n    signerOrProvider: signer,\n  });\n\n  const usdcContract = useContract({\n    addressOrName: addresses.tokens.usdc,\n    contractInterface: erc20ABI,\n    signerOrProvider: signer,\n  });\n\n  // eslint-disable-next-line no-unused-vars\n  const [_, wait] = useWaitForTransaction({\n    skip: true,\n  });\n\n  window.chainInfo = chainInfo;\n\n  if (!chainInfo) return <h4>Loading...</h4>;\n  console.log({ chainInfo });\n  const approveWETH = async () => {\n    console.log(\n      `approving WETH for ... ${addresses.target.originationController}`\n    );\n    try {\n      const { hash } = await wethContract.approve(\n        addresses.target.originationController,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving WETH...\",\n        success: \"WETH Approved\",\n        error: \"Failed to Approve WETH\",\n      });\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const approveUSDC = async () => {\n    console.log(\n      `approving USDC for...${addresses.target.originationController}`\n    );\n    try {\n      const { hash } = await usdcContract.approve(\n        addresses.target.originationController,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving USDC...\",\n        success: \"USDC Approved\",\n        error: \"Failed to Approve USDC\",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <h4>Active Loans</h4>\n      <div>\n        <button\n          onClick={() => approveWETH()}\n          style={{ backgroundColor: \"white\" }}\n        >\n          Approve WETH (OrCtrl)\n        </button>\n        &nbsp; &nbsp;\n        <button\n          onClick={() => approveUSDC()}\n          style={{ backgroundColor: \"white\" }}\n        >\n          Approve USDC (OrCtrl)\n        </button>\n      </div>\n      <ExecuteRollover />\n      {chainInfo.loans.map((loan, i) => (\n        <LoanCard loan={loan} key={i} index={i} chainInfo={chainInfo} />\n      ))}\n    </div>\n  );\n}\n\nfunction SubmitContainer() {\n  // const wallet = useWallet();\n  const borrowerChainInfo = usePawnBorrower();\n  if (!borrowerChainInfo) return <h4>Loading Borrower Loans...</h4>;\n\n  return (\n    <div>\n      <ExecuteRollover />\n      {borrowerChainInfo &&\n        borrowerChainInfo.loans.map((loan, i) => (\n          <div style={{ background: \"gray\", padding: \"10px\" }}>\n            <BorrowerLoanCard\n              loan={loan}\n              key={i}\n              chainInfo={borrowerChainInfo}\n            />\n          </div>\n        ))}\n    </div>\n  );\n}\n\nfunction LoanCard({ loan, index: key, chainInfo }) {\n  const { loanId, terms, data } = loan;\n  const [showRollover, setShowRollover] = useState(false);\n\n  return (\n    <div className=\"loan card\" key={key}>\n      <h5 className=\"bold\">\n        Loan ID {loanId.toString()}\n        {loan.legacy && ` (Legacy)`}\n      </h5>\n      <p>\n        <strong>Borrower:</strong> {loan.borrower}\n      </p>\n      <p>\n        <strong>Principal:</strong>{\" \"}\n        {ethers.utils.formatUnits(terms.principal, terms.payableTokenDecimals)}{\" \"}\n        {terms.payableTokenSymbol}\n      </p>\n      <p>\n        <strong>Interest:</strong>{\" \"}\n        {ethers.utils.formatUnits(terms.interest, terms.payableTokenDecimals)}{\" \"}\n        {terms.payableTokenSymbol}\n      </p>\n      <CollateralList loanId={loanId} collateral={loan.collateral} />\n      {/* <p>\n        <strong>\n          <DueDate ts={data.dueDate} />\n        </strong>\n      </p> */}\n      <p>\n        <strong>\n          <a\n            className=\"rollover toggle\"\n            onClick={() => setShowRollover(!showRollover)}\n          >\n            {showRollover ? \"Hide\" : \"Rollover Loan\"}\n          </a>\n        </strong>\n      </p>\n      {showRollover && (\n        <RolloverSigningForm\n          loan={loan}\n          oldTerms={terms}\n          chainInfo={chainInfo}\n        />\n      )}\n    </div>\n  );\n}\n\nexport const CollateralList = ({ loanId, collateral }) => {\n  return (\n    <div>\n      <strong>Collateral:</strong>\n      <ul className=\"collateral list\">\n        {collateral.erc20.map((c) => (\n          <li key={loanId + c.tokenAddress + c.amount.toString()}>\n            {ethers.utils.formatUnits(c.amount, c.decimals)} {c.symbol}\n          </li>\n        ))}\n        {collateral.erc721.map((c) => (\n          <li key={loanId + c.tokenAddress + c.tokenId}>\n            {c.tokenName} #{c.tokenId.toNumber()}\n          </li>\n        ))}\n        {collateral.erc1155.map((c) => (\n          <li key={(loanId = c.tokenAddress)}>\n            {c.amount} of {c.tokenName} #{c.tokenId}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nfunction DueDate({ ts }) {\n  const d = moment.unix(ts);\n\n  if (d > Date.now()) {\n    return `Due ${d.fromNow()} (${d.format(\"LLL\")})`;\n  } else {\n    return `Overdue: due ${d.toNow()} (${d.format(\"LLL\")})`;\n  }\n}\n\nexport const RolloverSigningForm = ({ loan, oldTerms, chainInfo }) => {\n  // const wallet = useWallet();\n  const [{ data: signer }] = useSigner();\n\n  window.oldTerms = oldTerms;\n  const SECONDS_IN_YEAR = 31536000;\n  const SECONDS_IN_DAY = 86400;\n  const prorated = oldTerms.durationSecs.toNumber() / SECONDS_IN_YEAR;\n  const principalBase = Number(\n    ethers.utils.formatUnits(oldTerms.principal, oldTerms.payableTokenDecimals)\n  );\n  const interestBase = Number(\n    ethers.utils.formatUnits(oldTerms.interest, oldTerms.payableTokenDecimals)\n  );\n  const apr = (interestBase / principalBase / prorated) * 100;\n  const durationDays = oldTerms.durationSecs.toNumber() / SECONDS_IN_DAY;\n\n  const initialState = {\n    principal: principalBase,\n    interest: interestBase,\n    duration: durationDays,\n    apr,\n  };\n\n  const [terms, setTerms] = useState(initialState);\n\n  const updateForm = (key) => (e) => {\n    setTerms({ ...terms, [key]: e.target.value });\n  };\n\n  window.terms = terms;\n  // window.wallet = wallet;\n\n  const totalInterest =\n    (terms.duration / 365) * (parseInt(terms.apr, 10) / 100) * terms.principal;\n\n  const resetForm = () => setTerms(initialState);\n\n  const doSigning = async () => {\n    const typedLoanTermsData = {\n      LoanTerms: [\n        { name: \"durationSecs\", type: \"uint256\" },\n        { name: \"principal\", type: \"uint256\" },\n        { name: \"interest\", type: \"uint256\" },\n        { name: \"collateralTokenId\", type: \"uint256\" },\n        { name: \"payableCurrency\", type: \"address\" },\n      ],\n      // primaryType: \"LoanTerms\"\n    };\n\n    const domainData = {\n      verifyingContract: addresses.target.originationController,\n      name: \"OriginationController\",\n      version: \"1\",\n      // chainId: wallet.chainId,\n      chainId: \"1\",\n    };\n\n    const newLoanTerms = {\n      durationSecs: terms.duration * SECONDS_IN_DAY,\n      principal: ethers.utils\n        .parseUnits(\n          terms.principal.toFixed(oldTerms.payableTokenDecimals),\n          oldTerms.payableTokenDecimals\n        )\n        .toString(),\n      interest: ethers.utils\n        .parseUnits(\n          totalInterest.toFixed(oldTerms.payableTokenDecimals),\n          oldTerms.payableTokenDecimals\n        )\n        .toString(),\n      collateralTokenId: oldTerms.collateralTokenId.toNumber(),\n      payableCurrency: oldTerms.payableCurrency,\n    };\n\n    // const provider = new ethers.providers.Web3Provider(wallet.ethereum);\n    // const signer = provider.getSigner();\n\n    const sig = fromRpcSig(\n      await signer._signTypedData(domainData, typedLoanTermsData, newLoanTerms)\n    );\n\n    // Generate EIP-712 signature to sign\n    // Download terms and signature as JSON\n    const payload = {\n      legacy: loan.legacy,\n      borrower: loan.borrower,\n      lender: loan.lender,\n      contracts: {\n        sourceLoanCore: loan.legacy\n          ? chainInfo.contractAddresses.legacy.loanCore\n          : chainInfo.contractAddresses.current.loanCore,\n        targetLoanCore: addresses.target.loanCore,\n        sourceRepaymentController: loan.legacy\n          ? chainInfo.contractAddresses.legacy.repaymentController\n          : chainInfo.contractAddresses.current.repaymentController,\n        targetOriginationController: addresses.target.originationController,\n      },\n      loanId: loan.loanId.toString(),\n      newLoanTerms,\n      signature: {\n        v: sig.v,\n        r: Buffer.from(sig.r).toString(\"base64\"),\n        s: Buffer.from(sig.s).toString(\"base64\"),\n      },\n      // collateral: loan.collateral,\n      metadata: {\n        totalInterest,\n        payableTokenDecimals: oldTerms.payableTokenDecimals,\n        payableTokenSymbol: oldTerms.payableTokenSymbol,\n        dueDate: moment().add(terms.duration, \"days\").toISOString(),\n      },\n    };\n\n    const blob = new Blob([JSON.stringify(payload, null, 4)], {\n      type: \"text/plain;charset=utf-8\",\n    });\n\n    saveAs(blob, `rollover_data_${Date.now()}.json`);\n  };\n\n  return (\n    <div className=\"rollover-form\">\n      <div className=\"row\">\n        <form>\n          <div className=\"row\">\n            <div className=\"four columns\">\n              <label>Principal</label>\n            </div>\n            <div className=\"six columns\">\n              <input\n                type=\"number\"\n                onChange={updateForm(\"principal\")}\n                value={terms.principal}\n              />\n            </div>\n            <div className=\"two columns\">\n              <strong>{oldTerms.payableTokenSymbol}</strong>\n            </div>\n          </div>\n          <div className=\"row input-row\">\n            <div className=\"four columns\">\n              <label>APR</label>\n            </div>\n            <div className=\"six columns\">\n              <input\n                type=\"number\"\n                onChange={updateForm(\"apr\")}\n                value={terms.apr}\n              />\n            </div>\n            <div className=\"two columns\">\n              <strong>%</strong>\n            </div>\n          </div>\n          <div className=\"row total-interest-row\">\n            <div className=\"four columns\">\n              <em>Total Interest:</em>\n            </div>\n            <div className=\"six columns\">\n              <em>\n                {totalInterest} {oldTerms.payableTokenSymbol}\n              </em>\n            </div>\n          </div>\n          <div className=\"row input-row\">\n            <div className=\"four columns\">\n              <label>Duration</label>\n            </div>\n            <div className=\"six columns\">\n              {/* TODO: Put implicit due date */}\n              <input\n                type=\"number\"\n                onChange={updateForm(\"duration\")}\n                value={terms.duration}\n              />\n            </div>\n            <div className=\"two columns\">\n              <strong>Days</strong>\n            </div>\n            <div className=\"row total-interest-row\">\n              <div className=\"four columns\">\n                <em>Due Date:</em>\n              </div>\n              <div className=\"six columns\">\n                <em>{moment().add(terms.duration, \"days\").format(\"LL\")}</em>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div className=\"row button-container\">\n        <div className=\"six columns\">\n          <button className=\"button reset-button\" onClick={resetForm}>\n            Reset\n          </button>\n        </div>\n        <div className=\"six columns\">\n          <button className=\"button-primary\" onClick={doSigning}>\n            Sign & Download JSON\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction ConnectPrompt() {\n  const [{ data }, connect] = useConnect();\n  const [mm, wc] = data?.connectors;\n  return (\n    <div className=\"centered\">\n      <button\n        className=\"connect\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => connect(data?.connectors[0])}\n      >\n        <img src={MMLogo} alt=\"Metamask\" className=\"mm-logo\" />\n        &nbsp; Connect Metamask\n      </button>\n      &nbsp;&nbsp;\n      <button\n        className=\"connect\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => connect(wc)}\n      >\n        Wallet Connect\n      </button>\n    </div>\n  );\n}\n\nwindow.instructions = () => {\n  const str = `\nFlash Rollover Prerequisites:\n\n1. Make sure borrower has approved BorrowerNote for withdrawal by flash rollover contract\n2. Make sure lender has approved OriginationController to withdraw tokens\n3. Make sure lender has approved FlashRollover to withdraw tokens\n`;\n\n  console.log(str);\n};\n\nexport default Main;\n","import { ethers } from \"ethers\";\nimport { useSigner, useContract, erc20ABI, useWaitForTransaction } from \"wagmi\";\nimport { useState } from \"react\";\nimport RepaymentControllerAbi from \"./abis/repayment-controller.json\";\nimport promissoryNoteAbi from \"./abis/promissory-note.json\";\nimport FlashRolloverAbi from \"./abis/flash-rollover.json\";\nimport AssetWrapperAbi from \"./abis/asset-wrapper.json\";\nimport loanCoreAbi from \"./abis/loan-core.json\";\nimport { toast } from \"react-toastify\";\nimport { addresses } from \"./config\";\nimport moment from \"moment\";\n\nexport const ExecuteRollover = () => {\n  // const wallet = useWallet();\n  // const borrowerChainInfo = usePawnBorrower();\n\n  const [{ data: signer }] = useSigner();\n  const [payload, setPayload] = useState(null);\n  const [selectedFile, setSelectedFile] = useState();\n  const [isFilePicked, setIsFilePicked] = useState(false);\n  const [repayNoteId, setRepayNoteId] = useState();\n  const [withdrawTokenId, setWithdrawTokenId] = useState();\n\n  const wethContract = useContract({\n    addressOrName: addresses.tokens.weth,\n    contractInterface: erc20ABI,\n    signerOrProvider: signer,\n  });\n\n  const repaymentContract = useContract({\n    addressOrName: addresses.target.repaymentController,\n    contractInterface: RepaymentControllerAbi,\n    signerOrProvider: signer,\n  });\n\n  const usdcContract = useContract({\n    addressOrName: addresses.tokens.usdc,\n    contractInterface: erc20ABI,\n    signerOrProvider: signer,\n  });\n\n  const borrowerNoteContract = useContract({\n    addressOrName: addresses.current.borrowerNote,\n    contractInterface: promissoryNoteAbi,\n    signerOrProvider: signer,\n  });\n\n  const flashRolloverContract = useContract({\n    addressOrName: addresses.target.flashRollover,\n    contractInterface: FlashRolloverAbi,\n    signerOrProvider: signer,\n  });\n\n  const assetWrapperContract = useContract({\n    addressOrName: addresses.target.assetWrapper,\n    contractInterface: AssetWrapperAbi,\n    signerOrProvider: signer,\n  });\n\n  const loanCoreContract = useContract({\n    addressOrName: addresses.target.loanCore,\n    contractInterface: loanCoreAbi,\n    signerOrProvider: signer,\n  });\n\n  console.log({ assetWrapperContract });\n  // eslint-disable-next-line no-unused-vars\n  const [_, wait] = useWaitForTransaction({\n    skip: true,\n  });\n\n  console.log({ contracts: { assetWrapperContract, loanCoreContract } });\n\n  window.payload = payload;\n  const approveWETH = async () => {\n    console.log(\"approving WETH...\");\n    try {\n      const { hash } = await wethContract.approve(\n        addresses.target.flashRollover,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving WETH...\",\n        success: \"WETH Approved\",\n        error: \"Failed to Approve WETH\",\n      });\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const approveUSDC = async () => {\n    console.log(`approving USDC...${addresses.target.flashRollover}`);\n    try {\n      const { hash } = await usdcContract.approve(\n        addresses.target.flashRollover,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving USDC...\",\n        success: \"USDC Approved\",\n        error: \"Failed to Approve USDC\",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const approveWETHRepay = async () => {\n    console.log(\"approving weth...\");\n    try {\n      const { hash } = await wethContract.approve(\n        addresses.target.repaymentController,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving weth...\",\n        success: \"weth Approved\",\n        error: \"Failed to Approve weth\",\n      });\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const approveUSDCRepay = async () => {\n    console.log(\"approving usdc...\");\n    try {\n      const { hash } = await usdcContract.approve(\n        addresses.target.repaymentController,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving usdc...\",\n        success: \"usdc Approved\",\n        error: \"Failed to Approve WETH\",\n      });\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const changeHandler = (event) => {\n    setSelectedFile(event.target.files[0]);\n    setIsFilePicked(true);\n  };\n\n  const handleSubmission = () => {\n    // Parse and set payload\n    const reader = new FileReader();\n\n    reader.addEventListener(\"load\", () => {\n      const payload = JSON.parse(reader.result);\n      setPayload(payload);\n    });\n\n    reader.readAsText(selectedFile);\n  };\n\n  const onRepay = async () => {\n    console.log(`repaying with...${addresses.target.repaymentController}`);\n    try {\n      const { hash } = await repaymentContract.repay(2);\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Repaying...\",\n        success: \"Repaid\",\n        error: \"Failed to repay\",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const onWithdraw = async () => {\n    console.log(`withdrawing from ... ${addresses.target.assetWrapper}`);\n\n    try {\n      const { hash } = await assetWrapperContract.withdraw(103);\n\n      const waitForTx = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForTx, {\n        pending: \"Withdrawing...\",\n        success: \"Success\",\n        error: \"Failed to Withdraw\",\n      });\n    } catch (e) {\n      toast.error(\"An Error Occured\");\n      console.log(\"Error \", e);\n    }\n  };\n\n  const doRollover = async () => {\n    // convert sigs to bytes\n    const r = Uint8Array.from(atob(payload.signature.r), (c) =>\n      c.charCodeAt(0)\n    );\n    const s = Uint8Array.from(atob(payload.signature.s), (c) =>\n      c.charCodeAt(0)\n    );\n    console.log(\"###### Payload Rollover :::: \", r, s, payload);\n\n    try {\n      console.log({ flashRolloverContract });\n      const { hash: rolloverHash } = await flashRolloverContract.rolloverLoan(\n        payload.contracts,\n        payload.loanId,\n        payload.newLoanTerms,\n        payload.signature.v,\n        r,\n        s,\n        { gasLimit: \"5000000\" }\n      );\n\n      const waitdoRollover = wait({ confirmations: 1, rolloverHash });\n      const response = await toast.promise(waitdoRollover, {\n        pending: \"Rollover...\",\n        success: \"Rollover Approved\",\n        error: \"Failed to Rollover \",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      console.log(\"ERror \", e);\n      toast.error(e);\n    }\n  };\n\n  if (!payload) {\n    return (\n      <div className=\"execute-container\">\n        <h3>Execute Rollover</h3>\n        {/* <button\n          style={{ background: \"lightgray\" }}\n          onClick={() => approveWETHRepay()}\n        >\n          Approve WETH Repayment\n        </button>\n        &nbsp;&nbsp;\n        <button\n          style={{ background: \"lightgray\" }}\n          onClick={() => approveUSDCRepay()}\n        >\n          Approve USDC Repayment\n        </button>\n        &nbsp;&nbsp;\n        <br />\n        <input\n          value={repayNoteId}\n          size={5}\n          style={{ padding: \"8px\" }}\n          onChange={(ev) => setRepayNoteId(ev.target.value)}\n        />\n        <button style={{ background: \"lightgray\" }} onClick={() => onRepay()}>\n          Repay\n        </button>\n        &nbsp;&nbsp;\n        <input\n          value={withdrawTokenId}\n          style={{ padding: \"8px\" }}\n          size={5}\n          onChange={(ev) => setWithdrawTokenId(ev.target.value)}\n        />\n        <button style={{ background: \"cyan\" }} onClick={() => onWithdraw()}>\n          Withdraw\n        </button> */}\n        <div className=\"row centered\">\n          <input type=\"file\" name=\"file\" onChange={changeHandler} />\n          <button\n            className=\"button-primary\"\n            onClick={handleSubmission}\n            disabled={!isFilePicked}\n          >\n            Upload JSON\n          </button>\n        </div>\n        <div>\n          <button\n            onClick={() => approveWETH()}\n            style={{ backgroundColor: \"white\" }}\n          >\n            Approve WETH (Rollover)\n          </button>\n          &nbsp; &nbsp;\n          <button\n            onClick={() => approveUSDC()}\n            style={{ backgroundColor: \"white\" }}\n          >\n            Approve USDC (Rollover)\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    const { loanId, newLoanTerms: terms, legacy, metadata } = payload;\n    const d = moment(Date.parse(metadata.dueDate));\n\n    return (\n      <div className=\"execute-container\">\n        <h3>Execute Rollover</h3>\n        <div className=\"row centered\">\n          <button className=\"button-primary\" onClick={() => setPayload(null)}>\n            Reset\n          </button>\n        </div>\n        <div className=\"row centered\">\n          <div className=\"loan card\">\n            <h5 className=\"bold\">\n              Loan ID {loanId.toString()}\n              {legacy && ` (Legacy)`}\n            </h5>\n            <p>\n              <strong>Principal:</strong>{\" \"}\n              {ethers.utils.formatUnits(\n                terms.principal,\n                metadata.payableTokenDecimals\n              )}{\" \"}\n              {metadata.payableTokenSymbol}\n            </p>\n            <p>\n              <strong>Interest:</strong>{\" \"}\n              {ethers.utils.formatUnits(\n                terms.interest,\n                metadata.payableTokenDecimals\n              )}{\" \"}\n              {metadata.payableTokenSymbol}\n            </p>\n            <p>\n              <strong>{`Due ${d.fromNow()} (${d.format(\"LLL\")})`}</strong>\n            </p>\n            <button className=\"button-primary\" onClick={doRollover}>\n              Rollover\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","export const addresses = {\n  legacy: {\n    lenderNote: \"0xD96e4D03420aA33a3FE91f57D03D8Ef69dE1e863\",\n    loanCore: \"0x59e57F9A313A2EB1c7357eCc331Ddca14209F403\",\n    repaymentController: \"0x945afF9253C840401166c3d24fF78180Fe0A05df\",\n    originationController: \"0x0585a675029C68A6AF41Ba1350BC8172D6172320\",\n    borrowerNote: \"0x9B458e2B9c0Cd34A62A26B846f45Eb829aEbC96E\",\n  },\n  current: {\n    lenderNote: \"0x6BD1476dD1D57f08670AF6720CA2eDf37B10746E\",\n    loanCore: \"0x606E4a441290314aEaF494194467Fd2Bb844064A\",\n    repaymentController: \"0x9eCE636e942bCb67f9E0b7B6C51A56570EF6F38d\",\n    originationController: \"0x7C2A27485B69f490945943464541236a025161F6\",\n    borrowerNote: \"0xe00B37ad3a165A66C20cA3E0170e4749c20eF58c\",\n  },\n  common: {\n    assetWrapper: \"0x1F563CDd688ad47b75E474FDe74E87C643d129b7\",\n    flashRollover: \"0x24611Fad669350cA869FBed4B62877d1a409dA12\",\n  },\n  tokens: {\n    usdc: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n    weth: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n  },\n  target: {\n    originationController: \"0xf72516d0d038Ec8c0Ef0Fe8f7f4EEaD8Ee1c31E2\",\n    flashRollover: \"0xC06f3ec8601dC3e8116EDd05d5A1721DC2d7250E\",\n    // silver\n    // flashRollover: \"0x27Ed938FF4d532332C2701866D7869EDcB39d7E4\",\n    loanCore: \"0x7691EE8feBD406968D46F9De96cB8CC18fC8b325\",\n    repaymentController: \"0xD7B4586b4eD87e2B98aD2df37A6c949C5aB1B1dB\",\n    borrowerNote: \"0xc3231258D6Ed397Dce7a52a27f816c8f41d22151 \",\n    assetWrapper: \"0x5CB803c31e8f4F895a3AB19d8218646dC63e9Dc2\",\n  },\n};\n","import { useState } from \"react\";\nimport { CollateralList, RolloverSigningForm } from \"./App\";\nimport { useSigner, useContract, useWaitForTransaction } from \"wagmi\";\nimport { addresses } from \"./config\";\nimport promissoryNoteAbi from \"./abis/promissory-note.json\";\nimport { toast } from \"react-toastify\";\nimport { ethers } from \"ethers\";\n\nexport const BorrowerLoanCard = ({ loan, index: key, chainInfo }) => {\n  const { loanId, terms, data, legacy } = loan;\n  const [showRollover, setShowRollover] = useState(false);\n  const [{ data: signer }] = useSigner();\n  console.log({ loan });\n\n  const borrowerNoteLookupKey = legacy ? 'legacy' : 'current';\n\n  const borrowerNoteContract = useContract({\n    addressOrName: addresses[borrowerNoteLookupKey].borrowerNote,\n    contractInterface: promissoryNoteAbi,\n    signerOrProvider: signer,\n  });\n\n  // eslint-disable-next-line no-unused-vars\n  const [_, wait] = useWaitForTransaction({\n    skip: true,\n  });\n\n  const approveNote = async (noteId) => {\n    console.log(\n      `approving Note ID ...${addresses.target.flashRollover} noteId ${noteId}`\n    );\n    try {\n      const { hash } = await borrowerNoteContract.approve(\n        addresses.target.flashRollover,\n        noteId\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving Borrower Note...\",\n        success: \"Note Approved\",\n        error: \"Failed to Approve Note\",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  return (\n    <div className=\"loan card\" key={key}>\n      <button\n        style={{ background: \"white\" }}\n        onClick={() => approveNote(loan?.data?.borrowerNoteId)}\n        disabled={!loan?.data?.borrowerNoteId}\n      >{`Approve Note ${loan?.data?.borrowerNoteId}`}</button>\n      <h5 className=\"bold\">\n        Loan ID {loanId.toString()}\n        {loan.legacy && ` (Legacy)`}\n      </h5>\n      <p>\n        <strong>Borrower:</strong> {loan.borrower}\n      </p>\n      <p>\n        <strong>Principal:</strong>{\" \"}\n        {ethers.utils.formatUnits(terms.principal, terms.payableTokenDecimals)}{\" \"}\n        {terms.payableTokenSymbol}\n      </p>\n      <p>\n        <strong>Interest:</strong>{\" \"}\n        {ethers.utils.formatUnits(terms.interest, terms.payableTokenDecimals)}{\" \"}\n        {terms.payableTokenSymbol}\n      </p>\n      <CollateralList loanId={loanId} collateral={loan.collateral} />\n      {/* <p>\n        <strong>\n          <DueDate ts={data.dueDate} />\n        </strong>\n      </p> */}\n      <p>\n        <strong>\n          <a\n            className=\"rollover toggle\"\n            onClick={() => setShowRollover(!showRollover)}\n          >\n            {showRollover ? \"Hide\" : \"Rollover Loan\"}\n          </a>\n        </strong>\n      </p>\n      {showRollover && (\n        <RolloverSigningForm\n          loan={loan}\n          oldTerms={terms}\n          chainInfo={chainInfo}\n        />\n      )}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/mm_logo.45038d58.svg\";","import { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport LegacyPromissoryNoteAbi from \"./abis/legacy-promissory-note.json\";\nimport LegacyLoanCoreAbi from \"./abis/legacy-loan-core.json\";\nimport PromissoryNoteAbi from \"./abis/promissory-note.json\";\nimport LoanCoreAbi from \"./abis/loan-core.json\";\nimport AssetWrapperAbi from \"./abis/asset-wrapper.json\";\nimport FlashRolloverAbi from \"./abis/flash-rollover.json\";\nimport { useAccount, useConnect, useProvider, useSigner } from \"wagmi\";\nimport ERC20Abi from \"./abis/erc20.json\";\nimport ERC721Abi from \"./abis/erc721.json\";\nimport ERC1155Abi from \"./abis/erc1155.json\";\nimport { addresses } from \"./config\";\n// export const addresses = {\n//     legacy: {\n//         lenderNote: '0xD96e4D03420aA33a3FE91f57D03D8Ef69dE1e863',\n//         loanCore: '0x59e57F9A313A2EB1c7357eCc331Ddca14209F403',\n//         repaymentController: '0x945afF9253C840401166c3d24fF78180Fe0A05df',\n//         originationController: '0x0585a675029C68A6AF41Ba1350BC8172D6172320'\n//     },\n//     current: {\n//         lenderNote: '0x6BD1476dD1D57f08670AF6720CA2eDf37B10746E',\n//         loanCore: '0x606E4a441290314aEaF494194467Fd2Bb844064A',\n//         repaymentController: '0x9eCE636e942bCb67f9E0b7B6C51A56570EF6F38d',\n//         originationController: '0x7C2A27485B69f490945943464541236a025161F6'\n//     },\n//     common: {\n//         assetWrapper: '0x1F563CDd688ad47b75E474FDe74E87C643d129b7',\n//         flashRollover: '0x24611Fad669350cA869FBed4B62877d1a409dA12'\n//     },\n//     tokens: {\n//         usdc: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n//         weth: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n//     }\n// }\n\nexport function usePawnLender() {\n  const provider = useProvider();\n  const [{ data }] = useAccount();\n\n  const account = data?.address;\n\n  const [chainInfo, setChainInfo] = useState(null);\n\n  useEffect(() => {\n    const getInfo = async () => {\n      if (!account) return;\n      console.log(account);\n\n      // Find active loans\n      // For lender note, check owned tokens - for each one, get the loan ID\n      const legacyLenderNote = new ethers.Contract(\n        addresses.legacy.lenderNote,\n        LegacyPromissoryNoteAbi,\n        provider\n      );\n      const lenderNote = new ethers.Contract(\n        addresses.current.lenderNote,\n        PromissoryNoteAbi,\n        provider\n      );\n      // const legacyLenderNote = new ethers.Contract(\n      //   addresses.legacy.borrowerNote,\n      //   LegacyPromissoryNoteAbi,\n      //   provider\n      // );\n      // const lenderNote = new ethers.Contract(\n      //   addresses.current.borrowerNote,\n      //   PromissoryNoteAbi,\n      //   provider\n      // );\n      const legacyBorrowerNote = new ethers.Contract(\n        addresses.legacy.borrowerNote,\n        LegacyPromissoryNoteAbi,\n        provider\n      );\n      const borrowerNote = new ethers.Contract(\n        addresses.current.borrowerNote,\n        PromissoryNoteAbi,\n        provider\n      );\n      const legacyLoanCore = new ethers.Contract(\n        addresses.legacy.loanCore,\n        LegacyLoanCoreAbi,\n        provider\n      );\n      const loanCore = new ethers.Contract(\n        addresses.current.loanCore,\n        LoanCoreAbi,\n        provider\n      );\n      const assetWrapper = new ethers.Contract(\n        addresses.common.assetWrapper,\n        AssetWrapperAbi,\n        provider\n      );\n      const flashRollover = new ethers.Contract(\n        addresses.common.flashRollover,\n        FlashRolloverAbi,\n        provider\n      );\n\n      const usdc = new ethers.Contract(\n        addresses.tokens.usdc,\n        ERC20Abi,\n        provider\n      );\n      const weth = new ethers.Contract(\n        addresses.tokens.weth,\n        ERC20Abi,\n        provider\n      );\n\n      const ethBalance = await provider.getBalance(account);\n      const usdcBalance = await usdc.balanceOf(account);\n      const wethBalance = await weth.balanceOf(account);\n\n      const numLenderNotes = await lenderNote.balanceOf(account);\n      const numLegacyLenderNotes = await legacyLenderNote.balanceOf(account);\n\n      //   console.log(\"BALANCES\", numLenderNotes, numLegacyLenderNotes);\n\n      const loans = [];\n      window.contracts = {\n        assetWrapper,\n        flashRollover,\n        usdc,\n        loanCore,\n        legacyLoanCore,\n        lenderNote,\n        borrowerNote,\n      };\n      for (let i = 0; i < numLenderNotes; i++) {\n        const lenderNoteId = await lenderNote.tokenOfOwnerByIndex(account, i);\n        const loanId = await lenderNote.loanIdByNoteId(lenderNoteId);\n        const loanData = await loanCore.getLoan(loanId);\n        console.log(\"BORORWER NOTE ID\", loanData.borrowerNoteId);\n\n        // Active state\n        if (loanData.state === 2) {\n          // const borrower = await borrowerNote.ownerOf(loanData.borrowerNoteId);\n          // console.log(\"BORORWER\", borrower);\n          // Find collateral\n          const tokenId = loanData.terms.collateralTokenId;\n          const erc20Holdings = [];\n          const erc721Holdings = [];\n          const erc1155Holdings = [];\n\n          let failed = false;\n          let i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC20Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC20Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n              const decimals = await token.decimals();\n\n              erc20Holdings.push({\n                amount: holding.amount,\n                tokenAddress: holding.tokenAddress,\n                token,\n                tokenName,\n                symbol,\n                decimals,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC721Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC721Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc721Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC1155Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC1155Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc1155Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                amount: holding.amount,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          const payableToken = new ethers.Contract(\n            loanData.terms.payableCurrency,\n            ERC20Abi,\n            provider\n          );\n\n          loans.push({\n            legacy: false,\n            loanId: loanId,\n            lender: account,\n            // borrower,\n            data: {\n              state: loanData.state,\n              dueDate: loanData.dueDate.toNumber(),\n              borrowerNoteId: loanData.borrowerNoteId.toNumber(),\n              lenderNoteId: loanData.lenderNoteId.toNumber(),\n            },\n            terms: {\n              collateralTokenId: loanData.terms.collateralTokenId,\n              payableCurrency: loanData.terms.payableCurrency,\n              payableToken: payableToken,\n              payableTokenName: await payableToken.name(),\n              payableTokenSymbol: await payableToken.symbol(),\n              payableTokenDecimals: (await payableToken.decimals()) || 18,\n              durationSecs: loanData.terms.durationSecs,\n              principal: loanData.terms.principal,\n              interest: loanData.terms.interest,\n            },\n            collateral: {\n              erc20: erc20Holdings,\n              erc721: erc721Holdings,\n              erc1155: erc1155Holdings,\n            },\n          });\n        }\n      }\n\n      for (let i = 0; i < numLegacyLenderNotes; i++) {\n        const lenderNoteId = await legacyLenderNote.tokenOfOwnerByIndex(\n          account,\n          i\n        );\n        const loanId = await legacyLenderNote.loanIdByNoteId(lenderNoteId);\n        const loanData = await legacyLoanCore.getLoan(loanId);\n\n        // Active state\n        if (loanData.state === 2) {\n          // const borrower = await legacyBorrowerNote.ownerOf(loanData.borrowerNoteId);\n          // Find collateral\n          const tokenId = loanData.terms.collateralTokenId;\n          const erc20Holdings = [];\n          const erc721Holdings = [];\n          const erc1155Holdings = [];\n\n          let failed = false;\n          let i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC20Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC20Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n              const decimals = await token.decimals();\n\n              erc20Holdings.push({\n                amount: holding.amount,\n                tokenAddress: holding.tokenAddress,\n                token,\n                tokenName,\n                symbol,\n                decimals,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC721Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC721Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc721Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC1155Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC1155Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc1155Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                amount: holding.amount,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          const payableToken = new ethers.Contract(\n            loanData.terms.payableCurrency,\n            ERC20Abi,\n            provider\n          );\n\n          loans.push({\n            legacy: true,\n            loanId: loanId,\n            lender: account,\n            // borrower,\n            data: {\n              state: loanData.state,\n              dueDate: loanData.dueDate.toNumber(),\n              borrowerNoteId: loanData.borrowerNoteId.toNumber(),\n              lenderNoteId: loanData.lenderNoteId.toNumber(),\n            },\n            terms: {\n              collateralTokenId: loanData.terms.collateralTokenId,\n              payableCurrency: loanData.terms.payableCurrency,\n              payableToken: payableToken,\n              payableTokenName: await payableToken.name(),\n              payableTokenSymbol: await payableToken.symbol(),\n              payableTokenDecimals: (await payableToken.decimals()) || 18,\n              durationSecs: loanData.terms.durationSecs,\n              principal: loanData.terms.principal,\n              interest: loanData.terms.interest,\n            },\n            collateral: {\n              erc20: erc20Holdings,\n              erc721: erc721Holdings,\n              erc1155: erc1155Holdings,\n            },\n          });\n        }\n      }\n\n      const info = {\n        account,\n        balances: {\n          eth: ethBalance,\n          usdc: usdcBalance,\n          weth: wethBalance,\n        },\n        loans,\n        contracts: {\n          legacyLenderNote,\n          lenderNote,\n          legacyLoanCore,\n          loanCore,\n          assetWrapper,\n          flashRollover,\n        },\n        contractAddresses: addresses,\n      };\n\n      setChainInfo(Object.assign({ ...chainInfo }, info));\n    };\n\n    console.log(\"In account effect\", account, chainInfo, provider);\n\n    getInfo();\n  }, [account, chainInfo, provider]);\n\n  // const ethBalance = await ethers.provider.getBalance()\n\n  // For each loan, get all owned assets\n\n  // Return active loans\n  // Return contract addresses\n  return chainInfo;\n}\n","import { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport LegacyPromissoryNoteAbi from \"./abis/legacy-promissory-note.json\";\nimport LegacyLoanCoreAbi from \"./abis/legacy-loan-core.json\";\nimport PromissoryNoteAbi from \"./abis/promissory-note.json\";\nimport LoanCoreAbi from \"./abis/loan-core.json\";\nimport AssetWrapperAbi from \"./abis/asset-wrapper.json\";\nimport FlashRolloverAbi from \"./abis/flash-rollover.json\";\nimport { useAccount, useConnect, useProvider, useSigner } from \"wagmi\";\nimport ERC20Abi from \"./abis/erc20.json\";\nimport ERC721Abi from \"./abis/erc721.json\";\nimport ERC1155Abi from \"./abis/erc1155.json\";\nimport { addresses } from \"./config\";\n// export const addresses = {\n//     legacy: {\n//         lenderNote: '0xD96e4D03420aA33a3FE91f57D03D8Ef69dE1e863',\n//         loanCore: '0x59e57F9A313A2EB1c7357eCc331Ddca14209F403',\n//         repaymentController: '0x945afF9253C840401166c3d24fF78180Fe0A05df',\n//         originationController: '0x0585a675029C68A6AF41Ba1350BC8172D6172320'\n//     },\n//     current: {\n//         lenderNote: '0x6BD1476dD1D57f08670AF6720CA2eDf37B10746E',\n//         loanCore: '0x606E4a441290314aEaF494194467Fd2Bb844064A',\n//         repaymentController: '0x9eCE636e942bCb67f9E0b7B6C51A56570EF6F38d',\n//         originationController: '0x7C2A27485B69f490945943464541236a025161F6'\n//     },\n//     common: {\n//         assetWrapper: '0x1F563CDd688ad47b75E474FDe74E87C643d129b7',\n//         flashRollover: '0x24611Fad669350cA869FBed4B62877d1a409dA12'\n//     },\n//     tokens: {\n//         usdc: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n//         weth: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n//     }\n// }\n\n// export const addresses = {\n//   legacy: {\n//     lenderNote: \"0xD96e4D03420aA33a3FE91f57D03D8Ef69dE1e863\",\n//     loanCore: \"0x59e57F9A313A2EB1c7357eCc331Ddca14209F403\",\n//     repaymentController: \"0x945afF9253C840401166c3d24fF78180Fe0A05df\",\n//     originationController: \"0x0585a675029C68A6AF41Ba1350BC8172D6172320\",\n//     borrowerNote: \"0x9B458e2B9c0Cd34A62A26B846f45Eb829aEbC96E\",\n//   },\n//   current: {\n//     lenderNote: \"0x6BD1476dD1D57f08670AF6720CA2eDf37B10746E\",\n//     loanCore: \"0x606E4a441290314aEaF494194467Fd2Bb844064A\",\n//     repaymentController: \"0x9eCE636e942bCb67f9E0b7B6C51A56570EF6F38d\",\n//     originationController: \"0x7C2A27485B69f490945943464541236a025161F6\",\n//     borrowerNote: \"0xe00B37ad3a165A66C20cA3E0170e4749c20eF58c\",\n//   },\n//   common: {\n//     assetWrapper: \"0x1F563CDd688ad47b75E474FDe74E87C643d129b7\",\n//     flashRollover: \"0x24611Fad669350cA869FBed4B62877d1a409dA12\",\n//   },\n//   tokens: {\n//     usdc: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n//     weth: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n//   },\n// };\n\nexport function usePawnBorrower() {\n  const provider = useProvider();\n  const [{ data }] = useAccount();\n\n  const account = data?.address;\n\n  const [chainInfo, setChainInfo] = useState(null);\n\n  useEffect(() => {\n    const getInfo = async () => {\n      if (!account) return;\n      console.log(account);\n\n      // Find active loans\n      // For lender note, check owned tokens - for each one, get the loan ID\n      // const legacyLenderNote = new ethers.Contract(\n      //   addresses.legacy.lenderNote,\n      //   LegacyPromissoryNoteAbi,\n      //   provider\n      // );\n      // const lenderNote = new ethers.Contract(\n      //   addresses.current.lenderNote,\n      //   PromissoryNoteAbi,\n      //   provider\n      // );\n      // const legacyLenderNote = new ethers.Contract(\n      //   addresses.legacy.borrowerNote,\n      //   LegacyPromissoryNoteAbi,\n      //   provider\n      // );\n      // const lenderNote = new ethers.Contract(\n      //   addresses.current.borrowerNote,\n      //   PromissoryNoteAbi,\n      //   provider\n      // );\n      const legacyBorrowerNote = new ethers.Contract(\n        addresses.legacy.borrowerNote,\n        LegacyPromissoryNoteAbi,\n        provider\n      );\n      const borrowerNote = new ethers.Contract(\n        addresses.current.borrowerNote,\n        PromissoryNoteAbi,\n        provider\n      );\n      const legacyLoanCore = new ethers.Contract(\n        addresses.legacy.loanCore,\n        LegacyLoanCoreAbi,\n        provider\n      );\n      const loanCore = new ethers.Contract(\n        addresses.current.loanCore,\n        LoanCoreAbi,\n        provider\n      );\n      const assetWrapper = new ethers.Contract(\n        addresses.common.assetWrapper,\n        AssetWrapperAbi,\n        provider\n      );\n      const flashRollover = new ethers.Contract(\n        addresses.common.flashRollover,\n        FlashRolloverAbi,\n        provider\n      );\n\n      const usdc = new ethers.Contract(\n        addresses.tokens.usdc,\n        ERC20Abi,\n        provider\n      );\n      const weth = new ethers.Contract(\n        addresses.tokens.weth,\n        ERC20Abi,\n        provider\n      );\n\n      const ethBalance = await provider.getBalance(account);\n      const usdcBalance = await usdc.balanceOf(account);\n      const wethBalance = await weth.balanceOf(account);\n\n      // const numLenderNotes = await lenderNote.balanceOf(account);\n      // const numLegacyLenderNotes = await legacyLenderNote.balanceOf(account);\n\n      const numBorrowerNote = await borrowerNote.balanceOf(account);\n      const numLegacyBorrowerNote = await legacyBorrowerNote.balanceOf(account);\n\n      // console.log(\"BALANCES\", numLenderNotes, numLegacyLenderNotes);\n\n      const loans = [];\n      window.contracts = {\n        assetWrapper,\n        flashRollover,\n        usdc,\n        loanCore,\n        legacyLoanCore,\n        // lenderNote,\n        borrowerNote,\n      };\n      for (let i = 0; i < numBorrowerNote; i++) {\n        const lenderNoteId = await borrowerNote.tokenOfOwnerByIndex(account, i);\n        const loanId = await borrowerNote.loanIdByNoteId(lenderNoteId);\n        const loanData = await loanCore.getLoan(loanId);\n        console.log(\"BORORWER NOTE ID\", loanData.borrowerNoteId);\n\n        // Active state\n        if (loanData.state === 2) {\n          // const borrower = await borrowerNote.ownerOf(loanData.borrowerNoteId);\n          // console.log(\"BORORWER\", borrower);\n          // Find collateral\n          const tokenId = loanData.terms.collateralTokenId;\n          const erc20Holdings = [];\n          const erc721Holdings = [];\n          const erc1155Holdings = [];\n\n          let failed = false;\n          let i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC20Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC20Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n              const decimals = await token.decimals();\n\n              erc20Holdings.push({\n                amount: holding.amount,\n                tokenAddress: holding.tokenAddress,\n                token,\n                tokenName,\n                symbol,\n                decimals,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC721Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC721Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc721Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC1155Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC1155Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc1155Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                amount: holding.amount,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          const payableToken = new ethers.Contract(\n            loanData.terms.payableCurrency,\n            ERC20Abi,\n            provider\n          );\n\n          loans.push({\n            legacy: false,\n            loanId: loanId,\n            borrower: account,\n            // borrower,\n            data: {\n              state: loanData.state,\n              dueDate: loanData.dueDate.toNumber(),\n              borrowerNoteId: loanData.borrowerNoteId.toNumber(),\n              lenderNoteId: loanData.lenderNoteId.toNumber(),\n            },\n            terms: {\n              collateralTokenId: loanData.terms.collateralTokenId,\n              payableCurrency: loanData.terms.payableCurrency,\n              payableToken: payableToken,\n              payableTokenName: await payableToken.name(),\n              payableTokenSymbol: await payableToken.symbol(),\n              payableTokenDecimals: (await payableToken.decimals()) || 18,\n              durationSecs: loanData.terms.durationSecs,\n              principal: loanData.terms.principal,\n              interest: loanData.terms.interest,\n            },\n            collateral: {\n              erc20: erc20Holdings,\n              erc721: erc721Holdings,\n              erc1155: erc1155Holdings,\n            },\n          });\n        }\n      }\n\n      for (let i = 0; i < numLegacyBorrowerNote; i++) {\n        const borrowerNoteId = await legacyBorrowerNote.tokenOfOwnerByIndex(\n          account,\n          i\n        );\n        const loanId = await legacyBorrowerNote.loanIdByNoteId(borrowerNoteId);\n        const loanData = await legacyLoanCore.getLoan(loanId);\n\n        // Active state\n        if (loanData.state === 2) {\n          // const borrower = await legacyBorrowerNote.ownerOf(loanData.borrowerNoteId);\n          // Find collateral\n          const tokenId = loanData.terms.collateralTokenId;\n          const erc20Holdings = [];\n          const erc721Holdings = [];\n          const erc1155Holdings = [];\n\n          let failed = false;\n          let i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC20Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC20Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n              const decimals = await token.decimals();\n\n              erc20Holdings.push({\n                amount: holding.amount,\n                tokenAddress: holding.tokenAddress,\n                token,\n                tokenName,\n                symbol,\n                decimals,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC721Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC721Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc721Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC1155Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC1155Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc1155Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                amount: holding.amount,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          const payableToken = new ethers.Contract(\n            loanData.terms.payableCurrency,\n            ERC20Abi,\n            provider\n          );\n\n          loans.push({\n            legacy: true,\n            loanId: loanId,\n            lender: account,\n            // borrower,\n            data: {\n              state: loanData.state,\n              dueDate: loanData.dueDate.toNumber(),\n              borrowerNoteId: loanData.borrowerNoteId.toNumber(),\n              lenderNoteId: loanData.lenderNoteId.toNumber(),\n            },\n            terms: {\n              collateralTokenId: loanData.terms.collateralTokenId,\n              payableCurrency: loanData.terms.payableCurrency,\n              payableToken: payableToken,\n              payableTokenName: await payableToken.name(),\n              payableTokenSymbol: await payableToken.symbol(),\n              payableTokenDecimals: (await payableToken.decimals()) || 18,\n              durationSecs: loanData.terms.durationSecs,\n              principal: loanData.terms.principal,\n              interest: loanData.terms.interest,\n            },\n            collateral: {\n              erc20: erc20Holdings,\n              erc721: erc721Holdings,\n              erc1155: erc1155Holdings,\n            },\n          });\n        }\n      }\n\n      const info = {\n        account,\n        balances: {\n          eth: ethBalance,\n          usdc: usdcBalance,\n          weth: wethBalance,\n        },\n        loans,\n        contracts: {\n          legacyBorrowerNote,\n          borrowerNote,\n          legacyLoanCore,\n          loanCore,\n          assetWrapper,\n          flashRollover,\n        },\n        contractAddresses: addresses,\n      };\n\n      setChainInfo(Object.assign({ ...chainInfo }, info));\n    };\n\n    console.log(\"In account effect\", account, chainInfo, provider);\n\n    getInfo();\n  }, [account, chainInfo, provider]);\n\n  // const ethBalance = await ethers.provider.getBalance()\n\n  // For each loan, get all owned assets\n\n  // Return active loans\n  // Return contract addresses\n  return chainInfo;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './skeleton.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}