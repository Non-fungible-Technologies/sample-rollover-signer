{"version":3,"sources":["App.js","ExecuteRollover.js","config.js","BorrowerLoanCard.js","mm_logo.svg","use-pawn-lender.js","usePawnBorrower.js","reportWebVitals.js","index.js"],"names":["ALCHEMY","App","useConnect","data","useAccount","disconnect","console","log","connected","className","style","border","color","onClick","path","element","Landing","SignerContainer","SubmitContainer","to","replace","ConnectPrompt","chainInfo","usePawnLender","useSigner","signer","wethContract","useContract","addressOrName","addresses","tokens","weth","contractInterface","erc20ABI","signerOrProvider","usdcContract","usdc","useWaitForTransaction","skip","wait","window","approveWETH","a","target","originationController","approve","ethers","constants","MaxInt256","hash","waitForApproval","confirmations","toast","promise","pending","success","error","response","approveUSDC","backgroundColor","loans","map","loan","i","LoanCard","index","borrowerChainInfo","usePawnBorrower","background","padding","key","loanId","terms","useState","showRollover","setShowRollover","toString","legacy","borrower","utils","formatUnits","principal","payableTokenDecimals","payableTokenSymbol","interest","CollateralList","collateral","RolloverSigningForm","oldTerms","erc20","c","amount","decimals","symbol","tokenAddress","erc721","tokenName","tokenId","toNumber","erc1155","prorated","durationSecs","principalBase","Number","interestBase","apr","initialState","duration","setTerms","updateForm","e","bnFormat","BigNumber","from","value","totalInterest","parseInt","doSigning","typedLoanTermsData","LoanTerms","name","type","domainData","verifyingContract","version","chainId","newLoanTerms","parseUnits","collateralTokenId","payableCurrency","fromRpcSig","_signTypedData","sig","payload","lender","contracts","sourceLoanCore","contractAddresses","loanCore","current","targetLoanCore","sourceRepaymentController","repaymentController","targetOriginationController","signature","v","r","Buffer","s","metadata","dueDate","moment","add","toISOString","blob","Blob","JSON","stringify","saveAs","Date","now","onChange","format","connect","connectors","wc","cursor","src","MMLogo","alt","instructions","Main","InjectedConnector","defaultChains","options","shimDisconnect","WalletConnectConnector","rpc","1","qrcode","provider","providers","AlchemyProvider","position","ExecuteRollover","setPayload","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","RepaymentControllerAbi","flashRolloverContract","borrowerNote","promissoryNoteAbi","flashRollover","FlashRolloverAbi","assetWrapperContract","assetWrapper","AssetWrapperAbi","loanCoreContract","loanCoreAbi","doRollover","Uint8Array","atob","charCodeAt","rolloverLoan","gasLimit","rolloverHash","waitdoRollover","d","parse","fromNow","event","files","reader","FileReader","addEventListener","result","readAsText","disabled","lenderNote","common","BorrowerLoanCard","borrowerNoteLookupKey","borrowerNoteContract","approveNote","noteId","borrowerNoteId","useProvider","account","address","setChainInfo","useEffect","legacyLenderNote","Contract","LegacyPromissoryNoteAbi","PromissoryNoteAbi","legacyLoanCore","LegacyLoanCoreAbi","LoanCoreAbi","ERC20Abi","getBalance","ethBalance","balanceOf","usdcBalance","wethBalance","numLenderNotes","numLegacyLenderNotes","numBorrowerNote","tokenOfOwnerByIndex","lenderNoteId","loanIdByNoteId","getLoan","loanData","state","erc20Holdings","erc721Holdings","erc1155Holdings","failed","bundleERC20Holdings","holding","token","push","bundleERC721Holdings","ERC721Abi","bundleERC1155Holdings","ERC1155Abi","payableToken","payableTokenName","info","balances","eth","Object","assign","getInfo","legacyBorrowerNote","numLegacyBorrowerNote","l","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e24b4084.chunk.js","sourcesContent":["import { useState } from \"react\";\n// import { useWallet, UseWalletProvider } from \"use-wallet\";\nimport { ethers, providers } from \"ethers\";\nimport { saveAs } from \"file-saver\";\nimport { fromRpcSig } from \"ethereumjs-util\";\nimport moment from \"moment\";\nimport FlashRolloverAbi from \"./abis/flash-rollover.json\";\nimport RepaymentControllerAbi from \"./abis/repayment-controller.json\";\nimport AssetWrapperAbi from \"./abis/asset-wrapper.json\";\nimport loanCoreAbi from \"./abis/loan-core.json\";\nimport { addresses } from \"./config\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  Provider,\n  chain,\n  defaultChains,\n  useAccount,\n  useSigner,\n  useConnect,\n  useNetwork,\n  useContract,\n  erc20ABI,\n  useWaitForTransaction,\n} from \"wagmi\";\nimport { BorrowerLoanCard } from \"./BorrowerLoanCard\";\nimport { InjectedConnector } from \"wagmi/connectors/injected\";\nimport { BrowserRouter, Navigate, Routes, Route, Link } from \"react-router-dom\";\nimport promissoryNoteAbi from \"./abis/promissory-note.json\";\nimport MMLogo from \"./mm_logo.svg\";\nimport \"./App.css\";\nimport { usePawnLender } from \"./use-pawn-lender\";\nimport { usePawnBorrower } from \"./usePawnBorrower\";\nimport { WalletConnectConnector } from \"wagmi/connectors/walletConnect\";\nimport { ExecuteRollover } from \"./ExecuteRollover\";\n\nconst ALCHEMY = \"nFgwePbNgrn6330Zsxu7l5oKP_IW5xBg\";\n\nfunction Main() {\n  const provider = ({ chainId }) => {\n    return new providers.AlchemyProvider(chainId, ALCHEMY);\n  };\n  const connectors = ({ chainId }) => {\n    return [\n      new InjectedConnector({\n        defaultChains,\n        options: { shimDisconnect: true },\n      }),\n      new WalletConnectConnector({\n        options: {\n          rpc: {\n            1: `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY}`,\n          },\n          chainId: 1,\n          qrcode: true,\n        },\n      }),\n    ];\n  };\n  return (\n    <Provider connectors={connectors} provider={provider}>\n      <ToastContainer position=\"top-center\" />\n      <App />\n    </Provider>\n  );\n}\n\nfunction App() {\n  // const account = useAccount();\n  const [{ data }, connect] = useConnect();\n  const [{ data: account }, disconnect] = useAccount();\n\n  console.log(\"rendering\", data?.connected);\n\n  // if (\n  //   data &&\n  //   data?.connectors[0].chainId !== 1 &&\n  //   data?.connectors[0].chainId !== 1337\n  // ) {\n  //   return (\n  //     <div className=\"App\">\n  //       <div className=\"container main\">\n  //         <h1 className=\"bold\">Pawn.fi Rollover Signer</h1>\n  //         <hr />\n  //         <h4 className=\"bold header\">\n  //           Please switch your wallet network to Ethereum mainnet.\n  //         </h4>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container main\">\n        <h1 className=\"header bold\">Arcade Rollover Signer</h1>\n        <hr />\n        {data?.connected ? (\n          <>\n            <button\n              style={{ border: \"1px solid red\", color: \"white\" }}\n              onClick={() => disconnect()}\n            >\n              Disconnect\n            </button>\n            <BrowserRouter>\n              <Routes>\n                <Route path=\"/sample-rollover-signer\" element={<Landing />} />\n                <Route\n                  path=\"/sample-rollover-signer/lender\"\n                  element={<SignerContainer />}\n                />\n                <Route\n                  path=\"/sample-rollover-signer/borrower\"\n                  element={<SubmitContainer />}\n                />\n                <Route\n                  path=\"*\"\n                  element={<Navigate to=\"/sample-rollover-signer\" replace />}\n                />\n              </Routes>\n            </BrowserRouter>\n          </>\n        ) : (\n          <ConnectPrompt />\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction Landing() {\n  return (\n    <div className=\"container\">\n      <div className=\"row centered\">\n        <Link to=\"/sample-rollover-signer/lender\">\n          <button className=\"button-primary\">Lender</button>\n        </Link>\n      </div>\n      <div className=\"row centered\">\n        <Link to=\"/sample-rollover-signer/borrower\">\n          <button className=\"button-primary\">Borrower</button>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nfunction SignerContainer() {\n  // const wallet = useWallet();\n  const chainInfo = usePawnLender();\n  const [{ data: signer }] = useSigner();\n\n  const wethContract = useContract({\n    addressOrName: addresses.tokens.weth,\n    contractInterface: erc20ABI,\n    signerOrProvider: signer,\n  });\n\n  const usdcContract = useContract({\n    addressOrName: addresses.tokens.usdc,\n    contractInterface: erc20ABI,\n    signerOrProvider: signer,\n  });\n\n  // eslint-disable-next-line no-unused-vars\n  const [_, wait] = useWaitForTransaction({\n    skip: true,\n  });\n\n  window.chainInfo = chainInfo;\n\n  if (!chainInfo) return <h4>Loading...</h4>;\n  console.log({ chainInfo });\n  const approveWETH = async () => {\n    console.log(\n      `approving WETH for ... ${addresses.target.originationController}`\n    );\n    try {\n      const { hash } = await wethContract.approve(\n        addresses.target.originationController,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving WETH...\",\n        success: \"WETH Approved\",\n        error: \"Failed to Approve WETH\",\n      });\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const approveUSDC = async () => {\n    console.log(\n      `approving USDC for...${addresses.target.originationController}`\n    );\n    try {\n      const { hash } = await usdcContract.approve(\n        addresses.target.originationController,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving USDC...\",\n        success: \"USDC Approved\",\n        error: \"Failed to Approve USDC\",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <h4>Active Loans</h4>\n      <div>\n        <button\n          onClick={() => approveWETH()}\n          style={{ backgroundColor: \"white\" }}\n        >\n          Approve WETH (OrCtrl)\n        </button>\n        &nbsp; &nbsp;\n        <button\n          onClick={() => approveUSDC()}\n          style={{ backgroundColor: \"white\" }}\n        >\n          Approve USDC (OrCtrl)\n        </button>\n      </div>\n      <ExecuteRollover />\n      {chainInfo.loans.map((loan, i) => (\n        <LoanCard loan={loan} key={i} index={i} chainInfo={chainInfo} />\n      ))}\n    </div>\n  );\n}\n\nfunction SubmitContainer() {\n  // const wallet = useWallet();\n  const borrowerChainInfo = usePawnBorrower();\n  if (!borrowerChainInfo) return <h4>Loading Borrower Loans...</h4>;\n\n  return (\n    <div>\n      <ExecuteRollover />\n      {borrowerChainInfo &&\n        borrowerChainInfo.loans.map((loan, i) => (\n          <div style={{ background: \"gray\", padding: \"10px\" }}>\n            <BorrowerLoanCard\n              loan={loan}\n              key={i}\n              chainInfo={borrowerChainInfo}\n            />\n          </div>\n        ))}\n    </div>\n  );\n}\n\nfunction LoanCard({ loan, index: key, chainInfo }) {\n  const { loanId, terms, data } = loan;\n  const [showRollover, setShowRollover] = useState(false);\n  console.log(\"Loan ::::: \", loan);\n  return (\n    <div className=\"loan card\" key={key}>\n      <h5 className=\"bold\">\n        Loan ID {loanId.toString()}\n        {loan.legacy && ` (Legacy)`}\n      </h5>\n      <p>\n        <strong>Borrower:</strong> {loan.borrower}\n      </p>\n      <p>\n        <strong>Principal:</strong>{\" \"}\n        {ethers.utils.formatUnits(terms.principal, terms.payableTokenDecimals)}{\" \"}\n        {terms.payableTokenSymbol}\n      </p>\n      <p>\n        <strong>Interest:</strong>{\" \"}\n        {ethers.utils.formatUnits(terms.interest, terms.payableTokenDecimals)}{\" \"}\n        {terms.payableTokenSymbol}\n      </p>\n      <CollateralList loanId={loanId} collateral={loan.collateral} />\n      {/* <p>\n        <strong>\n          <DueDate ts={data.dueDate} />\n        </strong>\n      </p> */}\n      <p>\n        <strong>\n          <a\n            className=\"rollover toggle\"\n            onClick={() => setShowRollover(!showRollover)}\n          >\n            {showRollover ? \"Hide\" : \"Rollover Loan\"}\n          </a>\n        </strong>\n      </p>\n      {showRollover && (\n        <RolloverSigningForm\n          loan={loan}\n          oldTerms={terms}\n          chainInfo={chainInfo}\n        />\n      )}\n    </div>\n  );\n}\n\nexport const CollateralList = ({ loanId, collateral }) => {\n  return (\n    <div>\n      <strong>Collateral:</strong>\n      <ul className=\"collateral list\">\n        {collateral.erc20.map((c) => (\n          <li key={loanId + c.tokenAddress + c.amount.toString()}>\n            {ethers.utils.formatUnits(c.amount, c.decimals)} {c.symbol}\n          </li>\n        ))}\n        {collateral.erc721.map((c) => (\n          <li key={loanId + c.tokenAddress + c.tokenId}>\n            {c.tokenName} #{c.tokenId.toNumber()}\n          </li>\n        ))}\n        {collateral.erc1155.map((c) => (\n          <li key={(loanId = c.tokenAddress)}>\n            {c.amount} of {c.tokenName} #{c.tokenId}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nfunction DueDate({ ts }) {\n  const d = moment.unix(ts);\n\n  if (d > Date.now()) {\n    return `Due ${d.fromNow()} (${d.format(\"LLL\")})`;\n  } else {\n    return `Overdue: due ${d.toNow()} (${d.format(\"LLL\")})`;\n  }\n}\n\nexport const RolloverSigningForm = ({ loan, oldTerms, chainInfo }) => {\n  // const wallet = useWallet();\n  const [{ data: signer }] = useSigner();\n\n  window.oldTerms = oldTerms;\n  const SECONDS_IN_YEAR = 31536000;\n  const SECONDS_IN_DAY = 86400;\n  const prorated = oldTerms.durationSecs.toNumber() / SECONDS_IN_YEAR;\n  const principalBase = Number(\n    ethers.utils.formatUnits(oldTerms.principal, oldTerms.payableTokenDecimals)\n  );\n  const interestBase = Number(\n    ethers.utils.formatUnits(oldTerms.interest, oldTerms.payableTokenDecimals)\n  );\n  const apr = (interestBase / principalBase / prorated) * 100;\n  const durationDays = oldTerms.durationSecs.toNumber() / SECONDS_IN_DAY;\n\n  const initialState = {\n    principal: principalBase,\n    interest: interestBase,\n    duration: durationDays,\n    apr,\n  };\n\n  const [terms, setTerms] = useState(initialState);\n\n  const updateForm = (key) => (e) => {\n    const bnFormat = ethers.BigNumber.from(e.target.value);\n\n    setTerms({ ...terms, [key]: bnFormat });\n  };\n\n  window.terms = terms;\n  // window.wallet = wallet;\n\n  const totalInterest =\n    (terms.duration / 365) * (parseInt(terms.apr, 10) / 100) * terms.principal;\n\n  const resetForm = () => setTerms(initialState);\n\n  const doSigning = async () => {\n    const typedLoanTermsData = {\n      LoanTerms: [\n        { name: \"durationSecs\", type: \"uint256\" },\n        { name: \"principal\", type: \"uint256\" },\n        { name: \"interest\", type: \"uint256\" },\n        { name: \"collateralTokenId\", type: \"uint256\" },\n        { name: \"payableCurrency\", type: \"address\" },\n      ],\n      // primaryType: \"LoanTerms\"\n    };\n\n    const domainData = {\n      verifyingContract: addresses.target.originationController,\n      name: \"OriginationController\",\n      version: \"1\",\n      // chainId: wallet.chainId,\n      chainId: \"1\",\n    };\n    console.log({ terms });\n    const newLoanTerms = {\n      durationSecs: terms.duration * SECONDS_IN_DAY,\n      principal: ethers.utils\n        .parseUnits(\n          // terms.principal.toFixed(oldTerms.payableTokenDecimals),\n          terms.principal.toString(),\n          oldTerms.payableTokenDecimals\n        )\n        .toString(),\n      interest: ethers.utils\n        .parseUnits(\n          // totalInterest.toFixed(oldTerms.payableTokenDecimals),\n          totalInterest.toString(),\n          oldTerms.payableTokenDecimals\n        )\n        .toString(),\n      collateralTokenId: oldTerms.collateralTokenId.toNumber(),\n      payableCurrency: oldTerms.payableCurrency,\n    };\n\n    // const provider = new ethers.providers.Web3Provider(wallet.ethereum);\n    // const signer = provider.getSigner();\n\n    const sig = fromRpcSig(\n      await signer._signTypedData(domainData, typedLoanTermsData, newLoanTerms)\n    );\n\n    // Generate EIP-712 signature to sign\n    // Download terms and signature as JSON\n    const payload = {\n      legacy: loan.legacy,\n      borrower: loan.borrower,\n      lender: loan.lender,\n      contracts: {\n        sourceLoanCore: loan.legacy\n          ? chainInfo.contractAddresses.legacy.loanCore\n          : chainInfo.contractAddresses.current.loanCore,\n        targetLoanCore: addresses.target.loanCore,\n        sourceRepaymentController: loan.legacy\n          ? chainInfo.contractAddresses.legacy.repaymentController\n          : chainInfo.contractAddresses.current.repaymentController,\n        targetOriginationController: addresses.target.originationController,\n      },\n      loanId: loan.loanId.toString(),\n      newLoanTerms,\n      signature: {\n        v: sig.v,\n        r: Buffer.from(sig.r).toString(\"base64\"),\n        s: Buffer.from(sig.s).toString(\"base64\"),\n      },\n      // collateral: loan.collateral,\n      metadata: {\n        totalInterest,\n        payableTokenDecimals: oldTerms.payableTokenDecimals,\n        payableTokenSymbol: oldTerms.payableTokenSymbol,\n        dueDate: moment().add(terms.duration, \"days\").toISOString(),\n      },\n    };\n\n    const blob = new Blob([JSON.stringify(payload, null, 4)], {\n      type: \"text/plain;charset=utf-8\",\n    });\n\n    saveAs(blob, `rollover_data_${Date.now()}.json`);\n  };\n\n  return (\n    <div className=\"rollover-form\">\n      <div className=\"row\">\n        <form>\n          <div className=\"row\">\n            <div className=\"four columns\">\n              <label>Principal</label>\n            </div>\n            <div className=\"six columns\">\n              <input\n                type=\"number\"\n                onChange={updateForm(\"principal\")}\n                value={terms.principal}\n              />\n            </div>\n            <div className=\"two columns\">\n              <strong>{oldTerms.payableTokenSymbol}</strong>\n            </div>\n          </div>\n          <div className=\"row input-row\">\n            <div className=\"four columns\">\n              <label>APR</label>\n            </div>\n            <div className=\"six columns\">\n              <input\n                type=\"number\"\n                onChange={updateForm(\"apr\")}\n                value={terms.apr}\n              />\n            </div>\n            <div className=\"two columns\">\n              <strong>%</strong>\n            </div>\n          </div>\n          <div className=\"row total-interest-row\">\n            <div className=\"four columns\">\n              <em>Total Interest:</em>\n            </div>\n            <div className=\"six columns\">\n              <em>\n                {totalInterest} {oldTerms.payableTokenSymbol}\n              </em>\n            </div>\n          </div>\n          <div className=\"row input-row\">\n            <div className=\"four columns\">\n              <label>Duration</label>\n            </div>\n            <div className=\"six columns\">\n              {/* TODO: Put implicit due date */}\n              <input\n                type=\"number\"\n                onChange={updateForm(\"duration\")}\n                value={terms.duration}\n              />\n            </div>\n            <div className=\"two columns\">\n              <strong>Days</strong>\n            </div>\n            <div className=\"row total-interest-row\">\n              <div className=\"four columns\">\n                <em>Due Date:</em>\n              </div>\n              <div className=\"six columns\">\n                <em>{moment().add(terms.duration, \"days\").format(\"LL\")}</em>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div className=\"row button-container\">\n        <div className=\"six columns\">\n          <button className=\"button reset-button\" onClick={resetForm}>\n            Reset\n          </button>\n        </div>\n        <div className=\"six columns\">\n          <button className=\"button-primary\" onClick={doSigning}>\n            Sign & Download JSON\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction ConnectPrompt() {\n  const [{ data }, connect] = useConnect();\n  const [mm, wc] = data?.connectors;\n  return (\n    <div className=\"centered\">\n      <button\n        className=\"connect\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => connect(data?.connectors[0])}\n      >\n        <img src={MMLogo} alt=\"Metamask\" className=\"mm-logo\" />\n        &nbsp; Connect Metamask\n      </button>\n      &nbsp;&nbsp;\n      <button\n        className=\"connect\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => connect(wc)}\n      >\n        Wallet Connect\n      </button>\n    </div>\n  );\n}\n\nwindow.instructions = () => {\n  const str = `\nFlash Rollover Prerequisites:\n\n1. Make sure borrower has approved BorrowerNote for withdrawal by flash rollover contract\n2. Make sure lender has approved OriginationController to withdraw tokens\n3. Make sure lender has approved FlashRollover to withdraw tokens\n`;\n\n  console.log(str);\n};\n\nexport default Main;\n","import { ethers } from \"ethers\";\nimport { useSigner, useContract, erc20ABI, useWaitForTransaction } from \"wagmi\";\nimport { useState } from \"react\";\nimport RepaymentControllerAbi from \"./abis/repayment-controller.json\";\nimport promissoryNoteAbi from \"./abis/promissory-note.json\";\nimport FlashRolloverAbi from \"./abis/flash-rollover.json\";\nimport AssetWrapperAbi from \"./abis/asset-wrapper.json\";\nimport loanCoreAbi from \"./abis/loan-core.json\";\nimport { toast } from \"react-toastify\";\nimport { addresses } from \"./config\";\nimport moment from \"moment\";\n\nexport const ExecuteRollover = () => {\n  // const wallet = useWallet();\n  // const borrowerChainInfo = usePawnBorrower();\n\n  const [{ data: signer }] = useSigner();\n  const [payload, setPayload] = useState(null);\n  const [selectedFile, setSelectedFile] = useState();\n  const [isFilePicked, setIsFilePicked] = useState(false);\n  const [repayNoteId, setRepayNoteId] = useState();\n  const [withdrawTokenId, setWithdrawTokenId] = useState();\n\n  const wethContract = useContract({\n    addressOrName: addresses.tokens.weth,\n    contractInterface: erc20ABI,\n    signerOrProvider: signer,\n  });\n\n  const repaymentContract = useContract({\n    addressOrName: addresses.target.repaymentController,\n    contractInterface: RepaymentControllerAbi,\n    signerOrProvider: signer,\n  });\n\n  const usdcContract = useContract({\n    addressOrName: addresses.tokens.usdc,\n    contractInterface: erc20ABI,\n    signerOrProvider: signer,\n  });\n\n  const borrowerNoteContract = useContract({\n    addressOrName: addresses.current.borrowerNote,\n    contractInterface: promissoryNoteAbi,\n    signerOrProvider: signer,\n  });\n\n  const flashRolloverContract = useContract({\n    addressOrName: addresses.target.flashRollover,\n    contractInterface: FlashRolloverAbi,\n    signerOrProvider: signer,\n  });\n\n  const assetWrapperContract = useContract({\n    addressOrName: addresses.target.assetWrapper,\n    contractInterface: AssetWrapperAbi,\n    signerOrProvider: signer,\n  });\n\n  const loanCoreContract = useContract({\n    addressOrName: addresses.target.loanCore,\n    contractInterface: loanCoreAbi,\n    signerOrProvider: signer,\n  });\n\n  console.log({ assetWrapperContract });\n  // eslint-disable-next-line no-unused-vars\n  const [_, wait] = useWaitForTransaction({\n    skip: true,\n  });\n\n  console.log({ contracts: { assetWrapperContract, loanCoreContract } });\n\n  window.payload = payload;\n  const approveWETH = async () => {\n    console.log(\"approving WETH...\");\n    try {\n      const { hash } = await wethContract.approve(\n        addresses.target.flashRollover,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving WETH...\",\n        success: \"WETH Approved\",\n        error: \"Failed to Approve WETH\",\n      });\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const approveUSDC = async () => {\n    console.log(`approving USDC...${addresses.target.flashRollover}`);\n    try {\n      const { hash } = await usdcContract.approve(\n        addresses.target.flashRollover,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving USDC...\",\n        success: \"USDC Approved\",\n        error: \"Failed to Approve USDC\",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const approveWETHRepay = async () => {\n    console.log(\"approving weth...\");\n    try {\n      const { hash } = await wethContract.approve(\n        addresses.target.repaymentController,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving weth...\",\n        success: \"weth Approved\",\n        error: \"Failed to Approve weth\",\n      });\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const approveUSDCRepay = async () => {\n    console.log(\"approving usdc...\");\n    try {\n      const { hash } = await usdcContract.approve(\n        addresses.target.repaymentController,\n        ethers.constants.MaxInt256\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving usdc...\",\n        success: \"usdc Approved\",\n        error: \"Failed to Approve WETH\",\n      });\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const changeHandler = (event) => {\n    setSelectedFile(event.target.files[0]);\n    setIsFilePicked(true);\n  };\n\n  const handleSubmission = () => {\n    // Parse and set payload\n    const reader = new FileReader();\n\n    reader.addEventListener(\"load\", () => {\n      const payload = JSON.parse(reader.result);\n      setPayload(payload);\n    });\n\n    reader.readAsText(selectedFile);\n  };\n\n  const onRepay = async () => {\n    console.log(`repaying with...${addresses.target.repaymentController}`);\n    try {\n      const { hash } = await repaymentContract.repay(2);\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Repaying...\",\n        success: \"Repaid\",\n        error: \"Failed to repay\",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n\n  const onWithdraw = async () => {\n    console.log(`withdrawing from ... ${addresses.target.assetWrapper}`);\n\n    try {\n      const { hash } = await assetWrapperContract.withdraw(103);\n\n      const waitForTx = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForTx, {\n        pending: \"Withdrawing...\",\n        success: \"Success\",\n        error: \"Failed to Withdraw\",\n      });\n    } catch (e) {\n      toast.error(\"An Error Occured\");\n      console.log(\"Error \", e);\n    }\n  };\n\n  const doRollover = async () => {\n    // convert sigs to bytes\n    const r = Uint8Array.from(atob(payload.signature.r), (c) =>\n      c.charCodeAt(0)\n    );\n    const s = Uint8Array.from(atob(payload.signature.s), (c) =>\n      c.charCodeAt(0)\n    );\n    console.log(\"###### Payload Rollover :::: \", r, s, payload);\n\n    try {\n      console.log({ flashRolloverContract });\n      const { hash: rolloverHash } = await flashRolloverContract.rolloverLoan(\n        payload.contracts,\n        payload.loanId,\n        payload.newLoanTerms,\n        payload.lender, // specific to rolling over zombie loan with a different lender\n        payload.signature.v,\n        r,\n        s,\n        { gasLimit: \"5000000\" }\n      );\n\n      const waitdoRollover = wait({ confirmations: 1, rolloverHash });\n      const response = await toast.promise(waitdoRollover, {\n        pending: \"Rollover...\",\n        success: \"Rollover Approved\",\n        error: \"Failed to Rollover \",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      console.log(\"ERror \", e);\n      toast.error(e);\n    }\n  };\n\n  if (!payload) {\n    return (\n      <div className=\"execute-container\">\n        <h3>Execute Rollover</h3>\n        {/* <button\n          style={{ background: \"lightgray\" }}\n          onClick={() => approveWETHRepay()}\n        >\n          Approve WETH Repayment\n        </button>\n        &nbsp;&nbsp;\n        <button\n          style={{ background: \"lightgray\" }}\n          onClick={() => approveUSDCRepay()}\n        >\n          Approve USDC Repayment\n        </button>\n        &nbsp;&nbsp;\n        <br />\n        <input\n          value={repayNoteId}\n          size={5}\n          style={{ padding: \"8px\" }}\n          onChange={(ev) => setRepayNoteId(ev.target.value)}\n        />\n        <button style={{ background: \"lightgray\" }} onClick={() => onRepay()}>\n          Repay\n        </button>\n        &nbsp;&nbsp;\n        <input\n          value={withdrawTokenId}\n          style={{ padding: \"8px\" }}\n          size={5}\n          onChange={(ev) => setWithdrawTokenId(ev.target.value)}\n        />\n        <button style={{ background: \"cyan\" }} onClick={() => onWithdraw()}>\n          Withdraw\n        </button> */}\n        <div className=\"row centered\">\n          <input type=\"file\" name=\"file\" onChange={changeHandler} />\n          <button\n            className=\"button-primary\"\n            onClick={handleSubmission}\n            disabled={!isFilePicked}\n          >\n            Upload JSON\n          </button>\n        </div>\n        <div>\n          <button\n            onClick={() => approveWETH()}\n            style={{ backgroundColor: \"white\" }}\n          >\n            Approve WETH (Rollover)\n          </button>\n          &nbsp; &nbsp;\n          <button\n            onClick={() => approveUSDC()}\n            style={{ backgroundColor: \"white\" }}\n          >\n            Approve USDC (Rollover)\n          </button>\n        </div>\n      </div>\n    );\n  } else {\n    const { loanId, newLoanTerms: terms, legacy, metadata } = payload;\n    const d = moment(Date.parse(metadata.dueDate));\n\n    return (\n      <div className=\"execute-container\">\n        <h3>Execute Rollover</h3>\n        <div className=\"row centered\">\n          <button className=\"button-primary\" onClick={() => setPayload(null)}>\n            Reset\n          </button>\n        </div>\n        <div className=\"row centered\">\n          <div className=\"loan card\">\n            <h5 className=\"bold\">\n              Loan ID {loanId.toString()}\n              {legacy && ` (Legacy)`}\n            </h5>\n            <p>\n              <strong>Principal:</strong>{\" \"}\n              {ethers.utils.formatUnits(\n                terms.principal,\n                metadata.payableTokenDecimals\n              )}{\" \"}\n              {metadata.payableTokenSymbol}\n            </p>\n            <p>\n              <strong>Interest:</strong>{\" \"}\n              {ethers.utils.formatUnits(\n                terms.interest,\n                metadata.payableTokenDecimals\n              )}{\" \"}\n              {metadata.payableTokenSymbol}\n            </p>\n            <p>\n              <strong>{`Due ${d.fromNow()} (${d.format(\"LLL\")})`}</strong>\n            </p>\n            <button className=\"button-primary\" onClick={doRollover}>\n              Rollover\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n","export const addresses = {\n  legacy: {\n    lenderNote: \"0xD96e4D03420aA33a3FE91f57D03D8Ef69dE1e863\",\n    loanCore: \"0x59e57F9A313A2EB1c7357eCc331Ddca14209F403\",\n    repaymentController: \"0x945afF9253C840401166c3d24fF78180Fe0A05df\",\n    originationController: \"0x0585a675029C68A6AF41Ba1350BC8172D6172320\",\n    borrowerNote: \"0x9B458e2B9c0Cd34A62A26B846f45Eb829aEbC96E\",\n  },\n  current: {\n    lenderNote: \"0x6BD1476dD1D57f08670AF6720CA2eDf37B10746E\",\n    // loanCore: \"0x606E4a441290314aEaF494194467Fd2Bb844064A\",\n    loanCore: \"0x7691EE8feBD406968D46F9De96cB8CC18fC8b325\",\n    // repaymentController: \"0x9eCE636e942bCb67f9E0b7B6C51A56570EF6F38d\",\n    repaymentController: \"0xD7B4586b4eD87e2B98aD2df37A6c949C5aB1B1dB\",\n    originationController: \"0x7C2A27485B69f490945943464541236a025161F6\",\n    // borrowerNote: \"0xe00B37ad3a165A66C20cA3E0170e4749c20eF58c\",\n    borrowerNote: \"0xc3231258D6Ed397Dce7a52a27f816c8f41d22151\",\n  },\n  common: {\n    // assetWrapper: \"0x1F563CDd688ad47b75E474FDe74E87C643d129b7\",\n    assetWrapper: \"0x5CB803c31e8f4F895a3AB19d8218646dC63e9Dc2\",\n    flashRollover: \"0x24611Fad669350cA869FBed4B62877d1a409dA12\",\n  },\n  tokens: {\n    usdc: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n    weth: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n  },\n  target: {\n    originationController: \"0xf72516d0d038Ec8c0Ef0Fe8f7f4EEaD8Ee1c31E2\",\n    flashRollover: \"0x0aC4742c05A8f61A382e428a0adbcf378bD0d5E8\",\n    // silver\n    // flashRollover: \"0x27Ed938FF4d532332C2701866D7869EDcB39d7E4\",\n    loanCore: \"0x7691EE8feBD406968D46F9De96cB8CC18fC8b325\",\n    repaymentController: \"0xD7B4586b4eD87e2B98aD2df37A6c949C5aB1B1dB\",\n    borrowerNote: \"0xc3231258D6Ed397Dce7a52a27f816c8f41d22151 \",\n    assetWrapper: \"0x5CB803c31e8f4F895a3AB19d8218646dC63e9Dc2\",\n  },\n};\n","import { useState } from \"react\";\nimport { CollateralList, RolloverSigningForm } from \"./App\";\nimport { useSigner, useContract, useWaitForTransaction } from \"wagmi\";\nimport { addresses } from \"./config\";\nimport promissoryNoteAbi from \"./abis/promissory-note.json\";\nimport { toast } from \"react-toastify\";\nimport { ethers } from \"ethers\";\n\nexport const BorrowerLoanCard = ({ loan, index: key, chainInfo }) => {\n  const { loanId, terms, data, legacy } = loan;\n  const [showRollover, setShowRollover] = useState(false);\n  const [{ data: signer }] = useSigner();\n  console.log({ loan });\n\n  const borrowerNoteLookupKey = legacy ? \"legacy\" : \"current\";\n\n  const borrowerNoteContract = useContract({\n    addressOrName: addresses[borrowerNoteLookupKey].borrowerNote,\n    contractInterface: promissoryNoteAbi,\n    signerOrProvider: signer,\n  });\n\n  // eslint-disable-next-line no-unused-vars\n  const [_, wait] = useWaitForTransaction({\n    skip: true,\n  });\n\n  const approveNote = async (noteId) => {\n    console.log(\n      `approving Note ID ...${addresses.target.flashRollover} noteId ${noteId}`\n    );\n    try {\n      const { hash } = await borrowerNoteContract.approve(\n        addresses.target.flashRollover,\n        noteId\n      );\n\n      const waitForApproval = wait({ confirmations: 1, hash });\n      const response = await toast.promise(waitForApproval, {\n        pending: \"Approving Borrower Note...\",\n        success: \"Note Approved\",\n        error: \"Failed to Approve Note\",\n      });\n\n      console.log({ response });\n    } catch (e) {\n      toast.error(e);\n    }\n  };\n  console.log(\"Loan :::: \", loan);\n  return (\n    <div className=\"loan card\" key={key}>\n      <button\n        style={{ background: \"white\" }}\n        onClick={() => approveNote(loan?.data?.borrowerNoteId)}\n        disabled={!loan?.data?.borrowerNoteId}\n      >{`Approve Note ${loan?.data?.borrowerNoteId}`}</button>\n      <h5 className=\"bold\">\n        Loan ID {loanId.toString()}\n        {loan.legacy && ` (Legacy)`}\n      </h5>\n      <p>\n        <strong>Borrower:</strong> {loan.borrower}\n      </p>\n      <p>\n        <strong>Principal:</strong>{\" \"}\n        {ethers.utils.formatUnits(terms.principal, terms.payableTokenDecimals)}{\" \"}\n        {terms.payableTokenSymbol}\n      </p>\n      <p>\n        <strong>Interest:</strong>{\" \"}\n        {ethers.utils.formatUnits(terms.interest, terms.payableTokenDecimals)}{\" \"}\n        {terms.payableTokenSymbol}\n      </p>\n      <CollateralList loanId={loanId} collateral={loan.collateral} />\n      {/* <p>\n        <strong>\n          <DueDate ts={data.dueDate} />\n        </strong>\n      </p> */}\n      <p>\n        <strong>\n          <a\n            className=\"rollover toggle\"\n            onClick={() => setShowRollover(!showRollover)}\n          >\n            {showRollover ? \"Hide\" : \"Rollover Loan\"}\n          </a>\n        </strong>\n      </p>\n      {showRollover && (\n        <RolloverSigningForm\n          loan={loan}\n          oldTerms={terms}\n          chainInfo={chainInfo}\n        />\n      )}\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/mm_logo.45038d58.svg\";","import { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport LegacyPromissoryNoteAbi from \"./abis/legacy-promissory-note.json\";\nimport LegacyLoanCoreAbi from \"./abis/legacy-loan-core.json\";\nimport PromissoryNoteAbi from \"./abis/promissory-note.json\";\nimport LoanCoreAbi from \"./abis/loan-core.json\";\nimport AssetWrapperAbi from \"./abis/asset-wrapper.json\";\nimport FlashRolloverAbi from \"./abis/flash-rollover.json\";\nimport { useAccount, useConnect, useProvider, useSigner } from \"wagmi\";\nimport ERC20Abi from \"./abis/erc20.json\";\nimport ERC721Abi from \"./abis/erc721.json\";\nimport ERC1155Abi from \"./abis/erc1155.json\";\nimport { addresses } from \"./config\";\n// export const addresses = {\n//     legacy: {\n//         lenderNote: '0xD96e4D03420aA33a3FE91f57D03D8Ef69dE1e863',\n//         loanCore: '0x59e57F9A313A2EB1c7357eCc331Ddca14209F403',\n//         repaymentController: '0x945afF9253C840401166c3d24fF78180Fe0A05df',\n//         originationController: '0x0585a675029C68A6AF41Ba1350BC8172D6172320'\n//     },\n//     current: {\n//         lenderNote: '0x6BD1476dD1D57f08670AF6720CA2eDf37B10746E',\n//         loanCore: '0x606E4a441290314aEaF494194467Fd2Bb844064A',\n//         repaymentController: '0x9eCE636e942bCb67f9E0b7B6C51A56570EF6F38d',\n//         originationController: '0x7C2A27485B69f490945943464541236a025161F6'\n//     },\n//     common: {\n//         assetWrapper: '0x1F563CDd688ad47b75E474FDe74E87C643d129b7',\n//         flashRollover: '0x24611Fad669350cA869FBed4B62877d1a409dA12'\n//     },\n//     tokens: {\n//         usdc: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n//         weth: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n//     }\n// }\n\nexport function usePawnLender() {\n  const provider = useProvider();\n  const [{ data }] = useAccount();\n\n  let account = data?.address;\n  const borrower = \"0x852c29c4bcd5e4297839380ebb784cc48e4f81f7\";\n\n  const [chainInfo, setChainInfo] = useState(null);\n\n  useEffect(() => {\n    const getInfo = async () => {\n      console.log(\"running get info\");\n      if (!account) return;\n      console.log(account);\n      // Find active loans\n      // For lender note, check owned tokens - for each one, get the loan ID\n      const legacyLenderNote = new ethers.Contract(\n        addresses.legacy.lenderNote,\n        LegacyPromissoryNoteAbi,\n        provider\n      );\n      const lenderNote = new ethers.Contract(\n        addresses.current.lenderNote,\n        PromissoryNoteAbi,\n        provider\n      );\n      // const legacyLenderNote = new ethers.Contract(\n      //   addresses.legacy.borrowerNote,\n      //   LegacyPromissoryNoteAbi,\n      //   provider\n      // );\n      // const lenderNote = new ethers.Contract(\n      //   addresses.current.borrowerNote,\n      //   PromissoryNoteAbi,\n      //   provider\n      // );\n      const legacyBorrowerNote = new ethers.Contract(\n        addresses.legacy.borrowerNote,\n        LegacyPromissoryNoteAbi,\n        provider\n      );\n      const borrowerNote = new ethers.Contract(\n        addresses.current.borrowerNote,\n        PromissoryNoteAbi,\n        provider\n      );\n      const legacyLoanCore = new ethers.Contract(\n        addresses.legacy.loanCore,\n        LegacyLoanCoreAbi,\n        provider\n      );\n      const loanCore = new ethers.Contract(\n        addresses.current.loanCore,\n        LoanCoreAbi,\n        provider\n      );\n      const assetWrapper = new ethers.Contract(\n        addresses.common.assetWrapper,\n        AssetWrapperAbi,\n        provider\n      );\n      const flashRollover = new ethers.Contract(\n        addresses.common.flashRollover,\n        FlashRolloverAbi,\n        provider\n      );\n\n      const usdc = new ethers.Contract(\n        addresses.tokens.usdc,\n        ERC20Abi,\n        provider\n      );\n      const weth = new ethers.Contract(\n        addresses.tokens.weth,\n        ERC20Abi,\n        provider\n      );\n\n      const ethBalance = await provider.getBalance(account);\n      const usdcBalance = await usdc.balanceOf(account);\n      const wethBalance = await weth.balanceOf(account);\n\n      const numLenderNotes = await lenderNote.balanceOf(account);\n      const numLegacyLenderNotes = await legacyLenderNote.balanceOf(account);\n      console.log(\"Lender Notes ####\", numLenderNotes.toString());\n\n      //   console.log(\"BALANCES\", numLenderNotes, numLegacyLenderNotes);\n\n      const loans = [];\n      window.contracts = {\n        assetWrapper,\n        flashRollover,\n        usdc,\n        loanCore,\n        legacyLoanCore,\n        lenderNote,\n        borrowerNote,\n      };\n      const numBorrowerNote = await borrowerNote.balanceOf(borrower);\n\n      console.log(\"Num Notes:::: \", numBorrowerNote.toString());\n\n      for (let i = 0; i < numBorrowerNote; i++) {\n        const lenderNoteId = await borrowerNote.tokenOfOwnerByIndex(\n          borrower,\n          i\n        );\n        const loanId = await borrowerNote.loanIdByNoteId(lenderNoteId);\n        const loanData = await loanCore.getLoan(loanId);\n        console.log(\"loan id \", loanId);\n        console.log(\"BORORWER NOTE ID\", loanData.borrowerNoteId);\n\n        // Active state\n        if (loanData.state === 2) {\n          // const borrower = await borrowerNote.ownerOf(loanData.borrowerNoteId);\n          // console.log(\"BORORWER\", borrower);\n          // Find collateral\n          const tokenId = loanData.terms.collateralTokenId;\n          const erc20Holdings = [];\n          const erc721Holdings = [];\n          const erc1155Holdings = [];\n\n          let failed = false;\n          let i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC20Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC20Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n              const decimals = await token.decimals();\n\n              erc20Holdings.push({\n                amount: holding.amount,\n                tokenAddress: holding.tokenAddress,\n                token,\n                tokenName,\n                symbol,\n                decimals,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC721Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC721Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc721Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC1155Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC1155Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc1155Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                amount: holding.amount,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          const payableToken = new ethers.Contract(\n            loanData.terms.payableCurrency,\n            ERC20Abi,\n            provider\n          );\n\n          loans.push({\n            legacy: false,\n            loanId: loanId,\n            lender: account,\n            borrower: borrower,\n            data: {\n              state: loanData.state,\n              dueDate: loanData.dueDate.toNumber(),\n              borrowerNoteId: loanData.borrowerNoteId.toNumber(),\n              lenderNoteId: loanData.lenderNoteId.toNumber(),\n            },\n            terms: {\n              collateralTokenId: loanData.terms.collateralTokenId,\n              payableCurrency: loanData.terms.payableCurrency,\n              payableToken: payableToken,\n              payableTokenName: await payableToken.name(),\n              payableTokenSymbol: await payableToken.symbol(),\n              payableTokenDecimals: (await payableToken.decimals()) || 18,\n              durationSecs: loanData.terms.durationSecs,\n              principal: loanData.terms.principal,\n              interest: loanData.terms.interest,\n            },\n            collateral: {\n              erc20: erc20Holdings,\n              erc721: erc721Holdings,\n              erc1155: erc1155Holdings,\n            },\n          });\n        }\n      }\n\n      for (let i = 0; i < numLegacyLenderNotes; i++) {\n        const lenderNoteId = await legacyLenderNote.tokenOfOwnerByIndex(\n          account,\n          i\n        );\n        const loanId = await legacyLenderNote.loanIdByNoteId(lenderNoteId);\n        const loanData = await legacyLoanCore.getLoan(loanId);\n\n        // Active state\n        if (loanData.state === 2) {\n          // const borrower = await legacyBorrowerNote.ownerOf(loanData.borrowerNoteId);\n          // Find collateral\n          const tokenId = loanData.terms.collateralTokenId;\n          const erc20Holdings = [];\n          const erc721Holdings = [];\n          const erc1155Holdings = [];\n\n          let failed = false;\n          let i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC20Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC20Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n              const decimals = await token.decimals();\n\n              erc20Holdings.push({\n                amount: holding.amount,\n                tokenAddress: holding.tokenAddress,\n                token,\n                tokenName,\n                symbol,\n                decimals,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC721Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC721Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc721Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC1155Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC1155Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc1155Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                amount: holding.amount,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          const payableToken = new ethers.Contract(\n            loanData.terms.payableCurrency,\n            ERC20Abi,\n            provider\n          );\n\n          loans.push({\n            legacy: true,\n            loanId: loanId,\n            lender: account,\n            borrower: borrower,\n            data: {\n              state: loanData.state,\n              dueDate: loanData.dueDate.toNumber(),\n              borrowerNoteId: loanData.borrowerNoteId.toNumber(),\n              lenderNoteId: loanData.lenderNoteId.toNumber(),\n            },\n            terms: {\n              collateralTokenId: loanData.terms.collateralTokenId,\n              payableCurrency: loanData.terms.payableCurrency,\n              payableToken: payableToken,\n              payableTokenName: await payableToken.name(),\n              payableTokenSymbol: await payableToken.symbol(),\n              payableTokenDecimals: (await payableToken.decimals()) || 18,\n              durationSecs: loanData.terms.durationSecs,\n              principal: loanData.terms.principal,\n              interest: loanData.terms.interest,\n            },\n            collateral: {\n              erc20: erc20Holdings,\n              erc721: erc721Holdings,\n              erc1155: erc1155Holdings,\n            },\n          });\n        }\n      }\n\n      const info = {\n        account,\n        balances: {\n          eth: ethBalance,\n          usdc: usdcBalance,\n          weth: wethBalance,\n        },\n        loans,\n        contracts: {\n          legacyLenderNote,\n          lenderNote,\n          legacyLoanCore,\n          loanCore,\n          assetWrapper,\n          flashRollover,\n        },\n        contractAddresses: addresses,\n      };\n\n      setChainInfo((chainInfo) => Object.assign({ ...chainInfo }, info));\n    };\n\n    // console.log(\"In account effect\", account, chainInfo, provider);\n\n    getInfo();\n  }, [account, provider]);\n\n  // const ethBalance = await ethers.provider.getBalance()\n\n  // For each loan, get all owned assets\n\n  // Return active loans\n  // Return contract addresses\n  return chainInfo;\n}\n","import { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport LegacyPromissoryNoteAbi from \"./abis/legacy-promissory-note.json\";\nimport LegacyLoanCoreAbi from \"./abis/legacy-loan-core.json\";\nimport PromissoryNoteAbi from \"./abis/promissory-note.json\";\nimport LoanCoreAbi from \"./abis/loan-core.json\";\nimport AssetWrapperAbi from \"./abis/asset-wrapper.json\";\nimport FlashRolloverAbi from \"./abis/flash-rollover.json\";\nimport { useAccount, useConnect, useProvider, useSigner } from \"wagmi\";\nimport ERC20Abi from \"./abis/erc20.json\";\nimport ERC721Abi from \"./abis/erc721.json\";\nimport ERC1155Abi from \"./abis/erc1155.json\";\nimport { addresses } from \"./config\";\n// export const addresses = {\n//     legacy: {\n//         lenderNote: '0xD96e4D03420aA33a3FE91f57D03D8Ef69dE1e863',\n//         loanCore: '0x59e57F9A313A2EB1c7357eCc331Ddca14209F403',\n//         repaymentController: '0x945afF9253C840401166c3d24fF78180Fe0A05df',\n//         originationController: '0x0585a675029C68A6AF41Ba1350BC8172D6172320'\n//     },\n//     current: {\n//         lenderNote: '0x6BD1476dD1D57f08670AF6720CA2eDf37B10746E',\n//         loanCore: '0x606E4a441290314aEaF494194467Fd2Bb844064A',\n//         repaymentController: '0x9eCE636e942bCb67f9E0b7B6C51A56570EF6F38d',\n//         originationController: '0x7C2A27485B69f490945943464541236a025161F6'\n//     },\n//     common: {\n//         assetWrapper: '0x1F563CDd688ad47b75E474FDe74E87C643d129b7',\n//         flashRollover: '0x24611Fad669350cA869FBed4B62877d1a409dA12'\n//     },\n//     tokens: {\n//         usdc: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n//         weth: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n//     }\n// }\n\n// export const addresses = {\n//   legacy: {\n//     lenderNote: \"0xD96e4D03420aA33a3FE91f57D03D8Ef69dE1e863\",\n//     loanCore: \"0x59e57F9A313A2EB1c7357eCc331Ddca14209F403\",\n//     repaymentController: \"0x945afF9253C840401166c3d24fF78180Fe0A05df\",\n//     originationController: \"0x0585a675029C68A6AF41Ba1350BC8172D6172320\",\n//     borrowerNote: \"0x9B458e2B9c0Cd34A62A26B846f45Eb829aEbC96E\",\n//   },\n//   current: {\n//     lenderNote: \"0x6BD1476dD1D57f08670AF6720CA2eDf37B10746E\",\n//     loanCore: \"0x606E4a441290314aEaF494194467Fd2Bb844064A\",\n//     repaymentController: \"0x9eCE636e942bCb67f9E0b7B6C51A56570EF6F38d\",\n//     originationController: \"0x7C2A27485B69f490945943464541236a025161F6\",\n//     borrowerNote: \"0xe00B37ad3a165A66C20cA3E0170e4749c20eF58c\",\n//   },\n//   common: {\n//     assetWrapper: \"0x1F563CDd688ad47b75E474FDe74E87C643d129b7\",\n//     flashRollover: \"0x24611Fad669350cA869FBed4B62877d1a409dA12\",\n//   },\n//   tokens: {\n//     usdc: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n//     weth: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n//   },\n// };\n\nexport function usePawnBorrower() {\n  const provider = useProvider();\n  const [{ data }] = useAccount();\n\n  let account = data?.address;\n  account = \"0x852c29c4bcd5e4297839380ebb784cc48e4f81f7\";\n  const [chainInfo, setChainInfo] = useState(null);\n\n  useEffect(() => {\n    const getInfo = async () => {\n      if (!account) return;\n      console.log(account);\n\n      // Find active loans\n      // For lender note, check owned tokens - for each one, get the loan ID\n      // const legacyLenderNote = new ethers.Contract(\n      //   addresses.legacy.lenderNote,\n      //   LegacyPromissoryNoteAbi,\n      //   provider\n      // );\n      // const lenderNote = new ethers.Contract(\n      //   addresses.current.lenderNote,\n      //   PromissoryNoteAbi,\n      //   provider\n      // );\n      // const legacyLenderNote = new ethers.Contract(\n      //   addresses.legacy.borrowerNote,\n      //   LegacyPromissoryNoteAbi,\n      //   provider\n      // );\n      // const lenderNote = new ethers.Contract(\n      //   addresses.current.borrowerNote,\n      //   PromissoryNoteAbi,\n      //   provider\n      // );\n      const legacyBorrowerNote = new ethers.Contract(\n        addresses.legacy.borrowerNote,\n        LegacyPromissoryNoteAbi,\n        provider\n      );\n      const borrowerNote = new ethers.Contract(\n        addresses.current.borrowerNote,\n        PromissoryNoteAbi,\n        provider\n      );\n      const legacyLoanCore = new ethers.Contract(\n        addresses.legacy.loanCore,\n        LegacyLoanCoreAbi,\n        provider\n      );\n      const loanCore = new ethers.Contract(\n        addresses.current.loanCore,\n        LoanCoreAbi,\n        provider\n      );\n      const assetWrapper = new ethers.Contract(\n        addresses.common.assetWrapper,\n        AssetWrapperAbi,\n        provider\n      );\n      const flashRollover = new ethers.Contract(\n        addresses.common.flashRollover,\n        FlashRolloverAbi,\n        provider\n      );\n\n      const usdc = new ethers.Contract(\n        addresses.tokens.usdc,\n        ERC20Abi,\n        provider\n      );\n      const weth = new ethers.Contract(\n        addresses.tokens.weth,\n        ERC20Abi,\n        provider\n      );\n\n      const ethBalance = await provider.getBalance(account);\n      const usdcBalance = await usdc.balanceOf(account);\n      const wethBalance = await weth.balanceOf(account);\n\n      // const numLenderNotes = await lenderNote.balanceOf(account);\n      // const numLegacyLenderNotes = await legacyLenderNote.balanceOf(account);\n\n      const numBorrowerNote = await borrowerNote.balanceOf(account);\n      const numLegacyBorrowerNote = await legacyBorrowerNote.balanceOf(account);\n\n      // console.log(\"BALANCES\", numLenderNotes, numLegacyLenderNotes);\n\n      const loans = [];\n      window.contracts = {\n        assetWrapper,\n        flashRollover,\n        usdc,\n        loanCore,\n        legacyLoanCore,\n        // lenderNote,\n        borrowerNote,\n      };\n      console.log(\"Get Loan 4\");\n\n      const l = await loanCore.getLoan(6);\n      console.log(\"loan 4 deatails: \", l.borrowerNoteId.toString());\n      console.log(\"terms \", l.terms.principal.toString());\n      console.log(\"terms \", l.terms.payableCurrency.toString());\n\n      for (let i = 0; i < numBorrowerNote; i++) {\n        const lenderNoteId = await borrowerNote.tokenOfOwnerByIndex(account, i);\n        const loanId = await borrowerNote.loanIdByNoteId(lenderNoteId);\n        const loanData = await loanCore.getLoan(loanId);\n        console.log(\"BORORWER NOTE ID\", loanData.borrowerNoteId);\n\n        // Active state\n        if (loanData.state === 2 || true) {\n          // const borrower = await borrowerNote.ownerOf(loanData.borrowerNoteId);\n          // console.log(\"BORORWER\", borrower);\n          // Find collateral\n          const tokenId = loanData.terms.collateralTokenId;\n          const erc20Holdings = [];\n          const erc721Holdings = [];\n          const erc1155Holdings = [];\n\n          let failed = false;\n          let i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC20Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC20Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n              const decimals = await token.decimals();\n\n              erc20Holdings.push({\n                amount: holding.amount,\n                tokenAddress: holding.tokenAddress,\n                token,\n                tokenName,\n                symbol,\n                decimals,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC721Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC721Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc721Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC1155Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC1155Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc1155Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                amount: holding.amount,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          const payableToken = new ethers.Contract(\n            loanData.terms.payableCurrency,\n            ERC20Abi,\n            provider\n          );\n\n          loans.push({\n            legacy: false,\n            loanId: loanId,\n            borrower: account,\n            // borrower,\n            data: {\n              state: loanData.state,\n              dueDate: loanData.dueDate.toNumber(),\n              borrowerNoteId: loanData.borrowerNoteId.toNumber(),\n              lenderNoteId: loanData.lenderNoteId.toNumber(),\n            },\n            terms: {\n              collateralTokenId: loanData.terms.collateralTokenId,\n              payableCurrency: loanData.terms.payableCurrency,\n              payableToken: payableToken,\n              payableTokenName: await payableToken.name(),\n              payableTokenSymbol: await payableToken.symbol(),\n              payableTokenDecimals: (await payableToken.decimals()) || 18,\n              durationSecs: loanData.terms.durationSecs,\n              principal: loanData.terms.principal,\n              interest: loanData.terms.interest,\n            },\n            collateral: {\n              erc20: erc20Holdings,\n              erc721: erc721Holdings,\n              erc1155: erc1155Holdings,\n            },\n          });\n        }\n      }\n\n      for (let i = 0; i < numLegacyBorrowerNote; i++) {\n        const borrowerNoteId = await legacyBorrowerNote.tokenOfOwnerByIndex(\n          account,\n          i\n        );\n        const loanId = await legacyBorrowerNote.loanIdByNoteId(borrowerNoteId);\n        const loanData = await legacyLoanCore.getLoan(loanId);\n\n        // Active state\n        if (loanData.state === 2) {\n          // const borrower = await legacyBorrowerNote.ownerOf(loanData.borrowerNoteId);\n          // Find collateral\n          const tokenId = loanData.terms.collateralTokenId;\n          const erc20Holdings = [];\n          const erc721Holdings = [];\n          const erc1155Holdings = [];\n\n          let failed = false;\n          let i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC20Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC20Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n              const decimals = await token.decimals();\n\n              erc20Holdings.push({\n                amount: holding.amount,\n                tokenAddress: holding.tokenAddress,\n                token,\n                tokenName,\n                symbol,\n                decimals,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC721Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC721Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc721Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          failed = false;\n          i = 0;\n          while (!failed) {\n            try {\n              const holding = await assetWrapper.bundleERC1155Holdings(\n                tokenId,\n                i++\n              );\n              const token = new ethers.Contract(\n                holding.tokenAddress,\n                ERC1155Abi,\n                provider\n              );\n              const tokenName = await token.name();\n              const symbol = await token.symbol();\n\n              erc1155Holdings.push({\n                tokenAddress: holding.tokenAddress,\n                tokenId: holding.tokenId,\n                amount: holding.amount,\n                token,\n                tokenName,\n                symbol,\n              });\n            } catch (e) {\n              failed = true;\n            }\n          }\n\n          const payableToken = new ethers.Contract(\n            loanData.terms.payableCurrency,\n            ERC20Abi,\n            provider\n          );\n\n          loans.push({\n            legacy: true,\n            loanId: loanId,\n            lender: account,\n            // borrower,\n            data: {\n              state: loanData.state,\n              dueDate: loanData.dueDate.toNumber(),\n              borrowerNoteId: loanData.borrowerNoteId.toNumber(),\n              lenderNoteId: loanData.lenderNoteId.toNumber(),\n            },\n            terms: {\n              collateralTokenId: loanData.terms.collateralTokenId,\n              payableCurrency: loanData.terms.payableCurrency,\n              payableToken: payableToken,\n              payableTokenName: await payableToken.name(),\n              payableTokenSymbol: await payableToken.symbol(),\n              payableTokenDecimals: (await payableToken.decimals()) || 18,\n              durationSecs: loanData.terms.durationSecs,\n              principal: loanData.terms.principal,\n              interest: loanData.terms.interest,\n            },\n            collateral: {\n              erc20: erc20Holdings,\n              erc721: erc721Holdings,\n              erc1155: erc1155Holdings,\n            },\n          });\n        }\n      }\n\n      const info = {\n        account,\n        balances: {\n          eth: ethBalance,\n          usdc: usdcBalance,\n          weth: wethBalance,\n        },\n        loans,\n        contracts: {\n          legacyBorrowerNote,\n          borrowerNote,\n          legacyLoanCore,\n          loanCore,\n          assetWrapper,\n          flashRollover,\n        },\n        contractAddresses: addresses,\n      };\n\n      setChainInfo((state) => Object.assign({ ...state }, info));\n    };\n\n    getInfo();\n  }, [account, provider]);\n\n  // const ethBalance = await ethers.provider.getBalance()\n\n  // For each loan, get all owned assets\n\n  // Return active loans\n  // Return contract addresses\n  return chainInfo;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './normalize.css';\nimport './skeleton.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}